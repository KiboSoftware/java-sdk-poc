/*
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.orderrouting.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.orderrouting.models.CandidateSuggestionsRequest;
import com.kibocommerce.sdk.orderrouting.models.CandidateSuggestionsResponse;
import com.kibocommerce.sdk.orderrouting.models.SuggestionLog;
import com.kibocommerce.sdk.orderrouting.models.SuggestionRequest;
import com.kibocommerce.sdk.orderrouting.models.SuggestionResponse;
import com.kibocommerce.sdk.orderrouting.models.SuggestionTestRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RoutingApi
 */
@Disabled
public class RoutingApiTest {

    private final RoutingApi api = new RoutingApi();

    /**
     * getSampleRequest
     *
     * getSampleRequest
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSampleRequestUsingGETTest() throws ApiException {
        Integer xVolSite = null;
        Integer xVolTenant = null;
        SuggestionRequest response = api.getSampleRequestUsingGET(xVolSite, xVolTenant);
        // TODO: test validations
    }

    /**
     * getSuggestionLog
     *
     * getSuggestionLog
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSuggestionLogUsingGETTest() throws ApiException {
        Integer xVolSite = null;
        Integer xVolTenant = null;
        String externalResponseID = null;
        Integer orderID = null;
        Integer responseID = null;
        Integer suggestionID = null;
        List<SuggestionLog> response = api.getSuggestionLogUsingGET(xVolSite, xVolTenant, externalResponseID, orderID, responseID, suggestionID);
        // TODO: test validations
    }

    /**
     * suggestCandidates
     *
     * suggestCandidates
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suggestCandidatesUsingPOSTTest() throws ApiException {
        Integer xVolSite = null;
        Integer xVolTenant = null;
        CandidateSuggestionsRequest request = null;
        CandidateSuggestionsResponse response = api.suggestCandidatesUsingPOST(xVolSite, xVolTenant, request);
        // TODO: test validations
    }

    /**
     * suggestRoutingTest
     *
     * suggestRoutingTest
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suggestRoutingTestUsingPOSTTest() throws ApiException {
        Integer xVolSite = null;
        Integer xVolTenant = null;
        SuggestionTestRequest request = null;
        Boolean returnSuggestionLog = null;
        SuggestionResponse response = api.suggestRoutingTestUsingPOST(xVolSite, xVolTenant, request, returnSuggestionLog);
        // TODO: test validations
    }

    /**
     * suggestRouting
     *
     * suggestRouting
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suggestRoutingUsingPOSTTest() throws ApiException {
        Integer xVolSite = null;
        Integer xVolTenant = null;
        SuggestionRequest request = null;
        Boolean returnSuggestionLog = null;
        SuggestionResponse response = api.suggestRoutingUsingPOST(xVolSite, xVolTenant, request, returnSuggestionLog);
        // TODO: test validations
    }

}
