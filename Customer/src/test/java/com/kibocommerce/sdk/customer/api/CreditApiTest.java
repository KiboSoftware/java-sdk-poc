/*
 * Kibo Customer Service
 * OpenAPI Spec for Kibo Customer Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.customer.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.customer.models.CreditAuditEntryCollection;
import com.kibocommerce.sdk.customer.models.CreditCollection;
import com.kibocommerce.sdk.customer.models.CreditTransaction;
import com.kibocommerce.sdk.customer.models.CreditTransactionCollection;
import com.kibocommerce.sdk.customer.models.CustomerCredit;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CreditApi
 */
@Disabled
public class CreditApiTest {

    private final CreditApi api = new CreditApi();

    /**
     * Add Credit
     *
     * Adds credit to user account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCreditTest() throws ApiException {
        String userId = null;
        CustomerCredit customerCredit = null;
        CustomerCredit response = api.addCredit(userId, customerCredit);
        // TODO: test validations
    }

    /**
     * Add Transaction
     *
     * Adds a credit transaction.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTransactionTest() throws ApiException {
        String code = null;
        CreditTransaction creditTransaction = null;
        CreditTransaction response = api.addTransaction(code, creditTransaction);
        // TODO: test validations
    }

    /**
     * Associate Credit To Shopper
     *
     * Maps credit to the shopper.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void associateCreditToShopperTest() throws ApiException {
        String code = null;
        CustomerCredit response = api.associateCreditToShopper(code);
        // TODO: test validations
    }

    /**
     * Delete credit
     *
     * Deletes a credit.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCreditTest() throws ApiException {
        String code = null;
        api.deleteCredit(code);
        // TODO: test validations
    }

    /**
     * Get Audit Entries
     *
     * Retrieves a list of audit entries according to any filter criteria and sort options.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAuditEntriesTest() throws ApiException {
        String code = null;
        Integer startIndex = null;
        Integer pageSize = null;
        String sortBy = null;
        String filter = null;
        CreditAuditEntryCollection response = api.getAuditEntries(code, startIndex, pageSize, sortBy, filter);
        // TODO: test validations
    }

    /**
     * Get credit
     *
     * Get credit specified by code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCreditTest() throws ApiException {
        String code = null;
        CustomerCredit response = api.getCredit(code);
        // TODO: test validations
    }

    /**
     * Get Credits
     *
     * Retrieves a list of credit collection according to any filter criteria and sort options.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCreditsTest() throws ApiException {
        Integer startIndex = null;
        Integer pageSize = null;
        String sortBy = null;
        String filter = null;
        CreditCollection response = api.getCredits(startIndex, pageSize, sortBy, filter);
        // TODO: test validations
    }

    /**
     * Get Transactions
     *
     * Gets credit transactions according to any filter criteria and sort options.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTransactionsTest() throws ApiException {
        String code = null;
        Integer startIndex = null;
        Integer pageSize = null;
        String sortBy = null;
        String filter = null;
        CreditTransactionCollection response = api.getTransactions(code, startIndex, pageSize, sortBy, filter);
        // TODO: test validations
    }

    /**
     * Resend Credit Created Email
     *
     * Resend email when credit is created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resendCreditCreatedEmailTest() throws ApiException {
        String code = null;
        String userId = null;
        api.resendCreditCreatedEmail(code, userId);
        // TODO: test validations
    }

    /**
     * Update Credit
     *
     * Updates a credit specified by a credit code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCreditTest() throws ApiException {
        String code = null;
        CustomerCredit customerCredit = null;
        CustomerCredit response = api.updateCredit(code, customerCredit);
        // TODO: test validations
    }

}
