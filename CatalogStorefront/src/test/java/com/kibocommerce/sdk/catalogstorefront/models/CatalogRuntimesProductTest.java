/*
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogstorefront.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.catalogstorefront.models.CatalogRuntimesBundledProduct;
import com.kibocommerce.sdk.catalogstorefront.models.CatalogRuntimesCategory;
import com.kibocommerce.sdk.catalogstorefront.models.CatalogRuntimesDiscount;
import com.kibocommerce.sdk.catalogstorefront.models.CatalogRuntimesPackageMeasurements;
import com.kibocommerce.sdk.catalogstorefront.models.CatalogRuntimesProductCollectionInfo;
import com.kibocommerce.sdk.catalogstorefront.models.CatalogRuntimesProductImageGroup;
import com.kibocommerce.sdk.catalogstorefront.models.CatalogRuntimesProductInventoryInfo;
import com.kibocommerce.sdk.catalogstorefront.models.CatalogRuntimesProductOption;
import com.kibocommerce.sdk.catalogstorefront.models.CatalogRuntimesProductPrice;
import com.kibocommerce.sdk.catalogstorefront.models.CatalogRuntimesProductPricingBehaviorInfo;
import com.kibocommerce.sdk.catalogstorefront.models.CatalogRuntimesProductProperty;
import com.kibocommerce.sdk.catalogstorefront.models.ProductCollectionMember;
import com.kibocommerce.sdk.catalogstorefront.models.ProductContent;
import com.kibocommerce.sdk.catalogstorefront.models.ProductPriceRange;
import com.kibocommerce.sdk.catalogstorefront.models.ProductPurchasableState;
import com.kibocommerce.sdk.catalogstorefront.models.ProductVolumePrice;
import com.kibocommerce.sdk.catalogstorefront.models.VariationSummary;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for CatalogRuntimesProduct
 */
public class CatalogRuntimesProductTest {
    private final CatalogRuntimesProduct model = new CatalogRuntimesProduct();

    /**
     * Model tests for CatalogRuntimesProduct
     */
    @Test
    public void testCatalogRuntimesProduct() {
        // TODO: test CatalogRuntimesProduct
    }

    /**
     * Test the property 'productCode'
     */
    @Test
    public void productCodeTest() {
        // TODO: test productCode
    }

    /**
     * Test the property 'purchaseLocation'
     */
    @Test
    public void purchaseLocationTest() {
        // TODO: test purchaseLocation
    }

    /**
     * Test the property 'productSequence'
     */
    @Test
    public void productSequenceTest() {
        // TODO: test productSequence
    }

    /**
     * Test the property 'productUsage'
     */
    @Test
    public void productUsageTest() {
        // TODO: test productUsage
    }

    /**
     * Test the property 'fulfillmentTypesSupported'
     */
    @Test
    public void fulfillmentTypesSupportedTest() {
        // TODO: test fulfillmentTypesSupported
    }

    /**
     * Test the property 'goodsType'
     */
    @Test
    public void goodsTypeTest() {
        // TODO: test goodsType
    }

    /**
     * Test the property 'bundledProducts'
     */
    @Test
    public void bundledProductsTest() {
        // TODO: test bundledProducts
    }

    /**
     * Test the property 'content'
     */
    @Test
    public void contentTest() {
        // TODO: test content
    }

    /**
     * Test the property 'purchasableState'
     */
    @Test
    public void purchasableStateTest() {
        // TODO: test purchasableState
    }

    /**
     * Test the property 'isActive'
     */
    @Test
    public void isActiveTest() {
        // TODO: test isActive
    }

    /**
     * Test the property 'publishState'
     */
    @Test
    public void publishStateTest() {
        // TODO: test publishState
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'priceRange'
     */
    @Test
    public void priceRangeTest() {
        // TODO: test priceRange
    }

    /**
     * Test the property 'volumePriceBands'
     */
    @Test
    public void volumePriceBandsTest() {
        // TODO: test volumePriceBands
    }

    /**
     * Test the property 'volumePriceRange'
     */
    @Test
    public void volumePriceRangeTest() {
        // TODO: test volumePriceRange
    }

    /**
     * Test the property 'availableShippingDiscounts'
     */
    @Test
    public void availableShippingDiscountsTest() {
        // TODO: test availableShippingDiscounts
    }

    /**
     * Test the property 'productType'
     */
    @Test
    public void productTypeTest() {
        // TODO: test productType
    }

    /**
     * Test the property 'productTypeId'
     */
    @Test
    public void productTypeIdTest() {
        // TODO: test productTypeId
    }

    /**
     * Test the property 'isTaxable'
     */
    @Test
    public void isTaxableTest() {
        // TODO: test isTaxable
    }

    /**
     * Test the property 'isRecurring'
     */
    @Test
    public void isRecurringTest() {
        // TODO: test isRecurring
    }

    /**
     * Test the property 'pricingBehavior'
     */
    @Test
    public void pricingBehaviorTest() {
        // TODO: test pricingBehavior
    }

    /**
     * Test the property 'inventoryInfo'
     */
    @Test
    public void inventoryInfoTest() {
        // TODO: test inventoryInfo
    }

    /**
     * Test the property 'createDate'
     */
    @Test
    public void createDateTest() {
        // TODO: test createDate
    }

    /**
     * Test the property 'updateDate'
     */
    @Test
    public void updateDateTest() {
        // TODO: test updateDate
    }

    /**
     * Test the property 'dateFirstAvailableInCatalog'
     */
    @Test
    public void dateFirstAvailableInCatalogTest() {
        // TODO: test dateFirstAvailableInCatalog
    }

    /**
     * Test the property 'catalogStartDate'
     */
    @Test
    public void catalogStartDateTest() {
        // TODO: test catalogStartDate
    }

    /**
     * Test the property 'catalogEndDate'
     */
    @Test
    public void catalogEndDateTest() {
        // TODO: test catalogEndDate
    }

    /**
     * Test the property 'daysAvailableInCatalog'
     */
    @Test
    public void daysAvailableInCatalogTest() {
        // TODO: test daysAvailableInCatalog
    }

    /**
     * Test the property 'upc'
     */
    @Test
    public void upcTest() {
        // TODO: test upc
    }

    /**
     * Test the property 'upCs'
     */
    @Test
    public void upCsTest() {
        // TODO: test upCs
    }

    /**
     * Test the property 'mfgPartNumber'
     */
    @Test
    public void mfgPartNumberTest() {
        // TODO: test mfgPartNumber
    }

    /**
     * Test the property 'mfgPartNumbers'
     */
    @Test
    public void mfgPartNumbersTest() {
        // TODO: test mfgPartNumbers
    }

    /**
     * Test the property 'variationProductCode'
     */
    @Test
    public void variationProductCodeTest() {
        // TODO: test variationProductCode
    }

    /**
     * Test the property 'categories'
     */
    @Test
    public void categoriesTest() {
        // TODO: test categories
    }

    /**
     * Test the property 'measurements'
     */
    @Test
    public void measurementsTest() {
        // TODO: test measurements
    }

    /**
     * Test the property 'isPackagedStandAlone'
     */
    @Test
    public void isPackagedStandAloneTest() {
        // TODO: test isPackagedStandAlone
    }

    /**
     * Test the property 'properties'
     */
    @Test
    public void propertiesTest() {
        // TODO: test properties
    }

    /**
     * Test the property 'options'
     */
    @Test
    public void optionsTest() {
        // TODO: test options
    }

    /**
     * Test the property 'variations'
     */
    @Test
    public void variationsTest() {
        // TODO: test variations
    }

    /**
     * Test the property 'validPriceLists'
     */
    @Test
    public void validPriceListsTest() {
        // TODO: test validPriceLists
    }

    /**
     * Test the property 'locationsInStock'
     */
    @Test
    public void locationsInStockTest() {
        // TODO: test locationsInStock
    }

    /**
     * Test the property 'slicingAttributeFQN'
     */
    @Test
    public void slicingAttributeFQNTest() {
        // TODO: test slicingAttributeFQN
    }

    /**
     * Test the property 'productImageGroups'
     */
    @Test
    public void productImageGroupsTest() {
        // TODO: test productImageGroups
    }

    /**
     * Test the property 'sliceValue'
     */
    @Test
    public void sliceValueTest() {
        // TODO: test sliceValue
    }

    /**
     * Test the property 'productCollections'
     */
    @Test
    public void productCollectionsTest() {
        // TODO: test productCollections
    }

    /**
     * Test the property 'productCollectionMembers'
     */
    @Test
    public void productCollectionMembersTest() {
        // TODO: test productCollectionMembers
    }

    /**
     * Test the property 'collectionMembersProductContent'
     */
    @Test
    public void collectionMembersProductContentTest() {
        // TODO: test collectionMembersProductContent
    }

    /**
     * Test the property 'score'
     */
    @Test
    public void scoreTest() {
        // TODO: test score
    }

    /**
     * Test the property 'personalizationScore'
     */
    @Test
    public void personalizationScoreTest() {
        // TODO: test personalizationScore
    }

}
