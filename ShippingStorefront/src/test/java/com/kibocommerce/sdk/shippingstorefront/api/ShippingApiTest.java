/*
 * Kibo ShippingRuntime Service
 * OpenAPI Spec for Kibo ShippingRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.shippingstorefront.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.shippingstorefront.models.CancelLabelRequest;
import com.kibocommerce.sdk.shippingstorefront.models.CancelLabelResponse;
import com.kibocommerce.sdk.shippingstorefront.models.CarrierResponse;
import com.kibocommerce.sdk.shippingstorefront.models.ManifestResponse;
import com.kibocommerce.sdk.shippingstorefront.models.RateRequest;
import com.kibocommerce.sdk.shippingstorefront.models.RateRequestGroup;
import com.kibocommerce.sdk.shippingstorefront.models.RatesResponse;
import com.kibocommerce.sdk.shippingstorefront.models.RatesResponseGroup;
import com.kibocommerce.sdk.shippingstorefront.models.ShipmentRequest;
import com.kibocommerce.sdk.shippingstorefront.models.ShipmentResponse;
import com.kibocommerce.sdk.shippingstorefront.models.ShippingRuntimeManifestRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ShippingApi
 */
@Disabled
public class ShippingApiTest {

    private final ShippingApi api = new ShippingApi();

    /**
     * Cancel Labels
     *
     * Cancel a Unused Label
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelLabelsTest() throws ApiException {
        CancelLabelRequest cancelLabelRequest = null;
        CancelLabelResponse response = api.cancelLabels(cancelLabelRequest);
        // TODO: test validations
    }

    /**
     * Get Carriers
     *
     * Get a list of supported carriers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCarriersTest() throws ApiException {
        CarrierResponse response = api.getCarriers();
        // TODO: test validations
    }

    /**
     * Get Labels
     *
     * Get Shipping Label for the Service Type Requested
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLabelsTest() throws ApiException {
        ShipmentRequest shipmentRequest = null;
        ShipmentResponse response = api.getLabels(shipmentRequest);
        // TODO: test validations
    }

    /**
     * Get Manifest
     *
     * Get Manifest for the list Shipping Labels
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getManifestTest() throws ApiException {
        ShippingRuntimeManifestRequest shippingRuntimeManifestRequest = null;
        ManifestResponse response = api.getManifest(shippingRuntimeManifestRequest);
        // TODO: test validations
    }

    /**
     * Get Manifest URL
     *
     * Get Manifest URL for the Manifest Id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getManifestURLTest() throws ApiException {
        String carrierId = null;
        String manifestId = null;
        String response = api.getManifestURL(carrierId, manifestId);
        // TODO: test validations
    }

    /**
     * Get Multi Rates
     *
     * Get List of Rate Responses for a List of Rate Requests
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMultiRatesTest() throws ApiException {
        Boolean includeRawResponse = null;
        List<RateRequestGroup> rateRequestGroup = null;
        List<RatesResponseGroup> response = api.getMultiRates(includeRawResponse, rateRequestGroup);
        // TODO: test validations
    }

    /**
     * Get Rates
     *
     * Get Rate Responses for a Rate Request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRatesTest() throws ApiException {
        Boolean includeRawResponse = null;
        RateRequest rateRequest = null;
        RatesResponse response = api.getRates(includeRawResponse, rateRequest);
        // TODO: test validations
    }

}
