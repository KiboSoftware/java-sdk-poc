/*
 * Kibo MZDB Service
 * OpenAPI Spec for Kibo MZDB Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.entities.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.entities.models.EntityList;
import com.kibocommerce.sdk.entities.models.EntityListCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EntityListsApi
 */
@Disabled
public class EntityListsApiTest {

    private final EntityListsApi api = new EntityListsApi();

    /**
     * Add EntityList
     *
     * Create a new EntityList for a specific tenant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createEntityListTest() throws ApiException {
        EntityList entityList = null;
        EntityList response = api.createEntityList(entityList);
        // TODO: test validations
    }

    /**
     * Delete EntityList
     *
     * Delete an existing EntityList for a specific tenant. This will also delete all Entities in all instances of this EntityList for the tenant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteEntityListTest() throws ApiException {
        String entityListFullName = null;
        api.deleteEntityList(entityListFullName);
        // TODO: test validations
    }

    /**
     * Get EntityList
     *
     * Get an existing EntityList definition for a specific tenant
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEntityListTest() throws ApiException {
        String entityListFullName = null;
        EntityList response = api.getEntityList(entityListFullName);
        // TODO: test validations
    }

    /**
     * Get EntityLists
     *
     * Get a filtered list of EntityLists for a specific tenant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEntityListsTest() throws ApiException {
        Integer pageSize = null;
        Integer startIndex = null;
        String filter = null;
        String sortBy = null;
        EntityListCollection response = api.getEntityLists(pageSize, startIndex, filter, sortBy);
        // TODO: test validations
    }

    /**
     * Update Entitylist
     *
     * Update an existing Entitylist for a specific tenant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateEntityListTest() throws ApiException {
        String entityListFullName = null;
        EntityList entityList = null;
        EntityList response = api.updateEntityList(entityListFullName, entityList);
        // TODO: test validations
    }

}
