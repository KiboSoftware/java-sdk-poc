/*
 * Kibo Admin User Service
 * OpenAPI Spec for Kibo Admin User Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.adminuser.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.adminuser.models.AdminGroup;
import com.kibocommerce.sdk.adminuser.models.AdminGroupCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AdminGroupApi
 */
@Disabled
public class AdminGroupApiTest {

    private final AdminGroupApi api = new AdminGroupApi();

    /**
     * Add a admin group
     *
     * Add a admin group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addAdminGroupTest() throws ApiException {
        AdminGroup adminGroup = null;
        AdminGroup response = api.addAdminGroup(adminGroup);
        // TODO: test validations
    }

    /**
     * Add users to admin group
     *
     * Add users to admin group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addUsersTest() throws ApiException {
        String groupCode = null;
        List<String> requestBody = null;
        AdminGroup response = api.addUsers(groupCode, requestBody);
        // TODO: test validations
    }

    /**
     * Deletes a Admin Group
     *
     * Deletes a Admin Group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAdminGroupTest() throws ApiException {
        String groupCode = null;
        api.deleteAdminGroup(groupCode);
        // TODO: test validations
    }

    /**
     * Get Admin Group
     *
     * Gets a Admin group by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAdminGroupTest() throws ApiException {
        String groupCode = null;
        AdminGroup response = api.getAdminGroup(groupCode);
        // TODO: test validations
    }

    /**
     * Get Admin Groups
     *
     * Gets a collection of user groups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAdminGroupsTest() throws ApiException {
        Integer startIndex = null;
        Integer pageSize = null;
        String sortBy = null;
        String filter = null;
        AdminGroupCollection response = api.getAdminGroups(startIndex, pageSize, sortBy, filter);
        // TODO: test validations
    }

    /**
     * Remove users from admin group
     *
     * Remove users from admin group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeUsersTest() throws ApiException {
        String groupCode = null;
        List<String> requestBody = null;
        api.removeUsers(groupCode, requestBody);
        // TODO: test validations
    }

    /**
     * Update an existing adminGroup
     *
     * Update an existing adminGroup
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAdminGroupTest() throws ApiException {
        String groupCode = null;
        AdminGroup adminGroup = null;
        AdminGroup response = api.updateAdminGroup(groupCode, adminGroup);
        // TODO: test validations
    }

}
