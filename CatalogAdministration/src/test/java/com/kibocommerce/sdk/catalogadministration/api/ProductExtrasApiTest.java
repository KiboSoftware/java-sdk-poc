/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.catalogadministration.models.ProductExtra;
import com.kibocommerce.sdk.catalogadministration.models.ProductExtraValueDeltaPrice;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductExtrasApi
 */
@Disabled
public class ProductExtrasApiTest {

    private final ProductExtrasApi api = new ProductExtrasApi();

    /**
     * Add extra
     *
     * Add extra
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addExtraTest() throws ApiException {
        String productCode = null;
        ProductExtra productExtra = null;
        ProductExtra response = api.addExtra(productCode, productExtra);
        // TODO: test validations
    }

    /**
     * Add extra value localized delta price
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addExtraValueLocalizedDeltaPriceTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        String value = null;
        ProductExtraValueDeltaPrice productExtraValueDeltaPrice = null;
        ProductExtraValueDeltaPrice response = api.addExtraValueLocalizedDeltaPrice(productCode, attributeFQN, value, productExtraValueDeltaPrice);
        // TODO: test validations
    }

    /**
     * Delete extra
     *
     * Delete extra
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteExtraTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        api.deleteExtra(productCode, attributeFQN);
        // TODO: test validations
    }

    /**
     * Delete extra value localized delta price
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteExtraValueLocalizedDeltaPriceTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        String value = null;
        String currencyCode = null;
        api.deleteExtraValueLocalizedDeltaPrice(productCode, attributeFQN, value, currencyCode);
        // TODO: test validations
    }

    /**
     * Get extra
     *
     * Get individual extra.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExtraTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        ProductExtra response = api.getExtra(productCode, attributeFQN);
        // TODO: test validations
    }

    /**
     * Get extra value localized delta price
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExtraValueLocalizedDeltaPriceTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        String value = null;
        String currencyCode = null;
        ProductExtraValueDeltaPrice response = api.getExtraValueLocalizedDeltaPrice(productCode, attributeFQN, value, currencyCode);
        // TODO: test validations
    }

    /**
     * Get extra value localized delta prices
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExtraValueLocalizedDeltaPricesTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        String value = null;
        List<ProductExtraValueDeltaPrice> response = api.getExtraValueLocalizedDeltaPrices(productCode, attributeFQN, value);
        // TODO: test validations
    }

    /**
     * Get extras
     *
     * Get extras for the product.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExtrasTest() throws ApiException {
        String productCode = null;
        List<ProductExtra> response = api.getExtras(productCode);
        // TODO: test validations
    }

    /**
     * Update extra
     *
     * Update extra
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExtraTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        ProductExtra productExtra = null;
        ProductExtra response = api.updateExtra(productCode, attributeFQN, productExtra);
        // TODO: test validations
    }

    /**
     * Update extra value localized delta price
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExtraValueLocalizedDeltaPriceTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        String value = null;
        String currencyCode = null;
        ProductExtraValueDeltaPrice productExtraValueDeltaPrice = null;
        ProductExtraValueDeltaPrice response = api.updateExtraValueLocalizedDeltaPrice(productCode, attributeFQN, value, currencyCode, productExtraValueDeltaPrice);
        // TODO: test validations
    }

    /**
     * Update extra value localized delta prices
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExtraValueLocalizedDeltaPricesTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        String value = null;
        List<ProductExtraValueDeltaPrice> productExtraValueDeltaPrice = null;
        List<ProductExtraValueDeltaPrice> response = api.updateExtraValueLocalizedDeltaPrices(productCode, attributeFQN, value, productExtraValueDeltaPrice);
        // TODO: test validations
    }

}
