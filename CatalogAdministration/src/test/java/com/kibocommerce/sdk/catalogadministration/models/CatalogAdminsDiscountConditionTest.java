/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsCustomerSegment;
import com.kibocommerce.sdk.catalogadministration.models.CategoryDiscountCondition;
import com.kibocommerce.sdk.catalogadministration.models.ContinuityRecurrenceSettings;
import com.kibocommerce.sdk.catalogadministration.models.ProductDiscountCondition;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for CatalogAdminsDiscountCondition
 */
public class CatalogAdminsDiscountConditionTest {
    private final CatalogAdminsDiscountCondition model = new CatalogAdminsDiscountCondition();

    /**
     * Model tests for CatalogAdminsDiscountCondition
     */
    @Test
    public void testCatalogAdminsDiscountCondition() {
        // TODO: test CatalogAdminsDiscountCondition
    }

    /**
     * Test the property 'maxRedemptionCount'
     */
    @Test
    public void maxRedemptionCountTest() {
        // TODO: test maxRedemptionCount
    }

    /**
     * Test the property 'requiresCoupon'
     */
    @Test
    public void requiresCouponTest() {
        // TODO: test requiresCoupon
    }

    /**
     * Test the property 'couponCode'
     */
    @Test
    public void couponCodeTest() {
        // TODO: test couponCode
    }

    /**
     * Test the property 'requiresAuthenticatedUser'
     */
    @Test
    public void requiresAuthenticatedUserTest() {
        // TODO: test requiresAuthenticatedUser
    }

    /**
     * Test the property 'includedPaymentWorkflows'
     */
    @Test
    public void includedPaymentWorkflowsTest() {
        // TODO: test includedPaymentWorkflows
    }

    /**
     * Test the property 'includedCategories'
     */
    @Test
    public void includedCategoriesTest() {
        // TODO: test includedCategories
    }

    /**
     * Test the property 'excludedCategories'
     */
    @Test
    public void excludedCategoriesTest() {
        // TODO: test excludedCategories
    }

    /**
     * Test the property 'includedProducts'
     */
    @Test
    public void includedProductsTest() {
        // TODO: test includedProducts
    }

    /**
     * Test the property 'excludedProducts'
     */
    @Test
    public void excludedProductsTest() {
        // TODO: test excludedProducts
    }

    /**
     * Test the property 'customerSegments'
     */
    @Test
    public void customerSegmentsTest() {
        // TODO: test customerSegments
    }

    /**
     * Test the property 'minimumQuantityRequiredProducts'
     */
    @Test
    public void minimumQuantityRequiredProductsTest() {
        // TODO: test minimumQuantityRequiredProducts
    }

    /**
     * Test the property 'minimumQuantityProductsRequiredInCategories'
     */
    @Test
    public void minimumQuantityProductsRequiredInCategoriesTest() {
        // TODO: test minimumQuantityProductsRequiredInCategories
    }

    /**
     * Test the property 'minimumOrderAmount'
     */
    @Test
    public void minimumOrderAmountTest() {
        // TODO: test minimumOrderAmount
    }

    /**
     * Test the property 'maximumOrderAmount'
     */
    @Test
    public void maximumOrderAmountTest() {
        // TODO: test maximumOrderAmount
    }

    /**
     * Test the property 'categoriesToExcludeFromMinOrderTotal'
     */
    @Test
    public void categoriesToExcludeFromMinOrderTotalTest() {
        // TODO: test categoriesToExcludeFromMinOrderTotal
    }

    /**
     * Test the property 'productsToExcludeFromMinOrderTotal'
     */
    @Test
    public void productsToExcludeFromMinOrderTotalTest() {
        // TODO: test productsToExcludeFromMinOrderTotal
    }

    /**
     * Test the property 'minimumLifetimeValueAmount'
     */
    @Test
    public void minimumLifetimeValueAmountTest() {
        // TODO: test minimumLifetimeValueAmount
    }

    /**
     * Test the property 'startDate'
     */
    @Test
    public void startDateTest() {
        // TODO: test startDate
    }

    /**
     * Test the property 'expirationDate'
     */
    @Test
    public void expirationDateTest() {
        // TODO: test expirationDate
    }

    /**
     * Test the property 'minimumCategorySubtotalBeforeDiscounts'
     */
    @Test
    public void minimumCategorySubtotalBeforeDiscountsTest() {
        // TODO: test minimumCategorySubtotalBeforeDiscounts
    }

    /**
     * Test the property 'minimumRequiredQuantityPerRedemption'
     */
    @Test
    public void minimumRequiredQuantityPerRedemptionTest() {
        // TODO: test minimumRequiredQuantityPerRedemption
    }

    /**
     * Test the property 'validSubscriptionFrequencies'
     */
    @Test
    public void validSubscriptionFrequenciesTest() {
        // TODO: test validSubscriptionFrequencies
    }

    /**
     * Test the property 'validSubscriptionContinuityOrdinals'
     */
    @Test
    public void validSubscriptionContinuityOrdinalsTest() {
        // TODO: test validSubscriptionContinuityOrdinals
    }

    /**
     * Test the property 'minDistinctProductsRequired'
     */
    @Test
    public void minDistinctProductsRequiredTest() {
        // TODO: test minDistinctProductsRequired
    }

    /**
     * Test the property 'minTotalOrderQuantity'
     */
    @Test
    public void minTotalOrderQuantityTest() {
        // TODO: test minTotalOrderQuantity
    }

    /**
     * Test the property 'pricingContext'
     */
    @Test
    public void pricingContextTest() {
        // TODO: test pricingContext
    }

    /**
     * Test the property 'continuityRecurrenceSettings'
     */
    @Test
    public void continuityRecurrenceSettingsTest() {
        // TODO: test continuityRecurrenceSettings
    }

}
