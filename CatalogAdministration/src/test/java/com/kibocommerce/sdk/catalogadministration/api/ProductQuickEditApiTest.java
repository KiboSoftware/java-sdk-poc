/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.catalogadministration.models.QuickEditProductActions;
import com.kibocommerce.sdk.catalogadministration.models.QuickEditProductInCatalogActions;
import com.kibocommerce.sdk.catalogadministration.models.QuickEditProductPropertyActions;
import com.kibocommerce.sdk.catalogadministration.models.QuickEditResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductQuickEditApi
 */
@Disabled
public class ProductQuickEditApiTest {

    private final ProductQuickEditApi api = new ProductQuickEditApi();

    /**
     * Endpoint  is used to update product in Catalog
     *
     *  Values will be added not replaced.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProductInCatalogTest() throws ApiException {
        QuickEditProductInCatalogActions quickEditProductInCatalogActions = null;
        QuickEditResponse response = api.updateProductInCatalog(quickEditProductInCatalogActions);
        // TODO: test validations
    }

    /**
     * Endpoint used to apply properties updates  Values will be added not replaced
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProductPropertiesTest() throws ApiException {
        QuickEditProductPropertyActions quickEditProductPropertyActions = null;
        QuickEditResponse response = api.updateProductProperties(quickEditProductPropertyActions);
        // TODO: test validations
    }

    /**
     * Endpoint used to apply top level product updates  Downside is that the whole product has to be hydrated
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProductsTest() throws ApiException {
        QuickEditProductActions quickEditProductActions = null;
        QuickEditResponse response = api.updateProducts(quickEditProductActions);
        // TODO: test validations
    }

}
