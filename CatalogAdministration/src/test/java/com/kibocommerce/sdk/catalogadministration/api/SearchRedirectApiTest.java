/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.catalogadministration.models.SearchRedirect;
import com.kibocommerce.sdk.catalogadministration.models.SearchRedirectCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SearchRedirectApi
 */
@Disabled
public class SearchRedirectApiTest {

    private final SearchRedirectApi api = new SearchRedirectApi();

    /**
     * Add search redirect
     *
     * Adds a search redirect for a specific site.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addSearchRedirectTest() throws ApiException {
        Boolean fromSystemDefault = null;
        SearchRedirect searchRedirect = null;
        SearchRedirect response = api.addSearchRedirect(fromSystemDefault, searchRedirect);
        // TODO: test validations
    }

    /**
     * Delete search redirect
     *
     * Deletes a specific redirect for a site.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSearchRedirectTest() throws ApiException {
        String redirectId = null;
        SearchRedirect response = api.deleteSearchRedirect(redirectId);
        // TODO: test validations
    }

    /**
     * Get search redirect
     *
     * Get search redirect by redirect id.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSearchRedirectTest() throws ApiException {
        String redirectId = null;
        SearchRedirect response = api.getSearchRedirect(redirectId);
        // TODO: test validations
    }

    /**
     * Get search redirects
     *
     * Get search redirect list.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSearchRedirectsTest() throws ApiException {
        SearchRedirectCollection response = api.getSearchRedirects();
        // TODO: test validations
    }

    /**
     * Update search redirect
     *
     * Update a search redirect for a specific site.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSearchRedirectTest() throws ApiException {
        String redirectId = null;
        SearchRedirect searchRedirect = null;
        SearchRedirect response = api.updateSearchRedirect(redirectId, searchRedirect);
        // TODO: test validations
    }

}
