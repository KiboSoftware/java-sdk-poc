/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.catalogadministration.models.AttributeTypeRuleCollection;
import com.kibocommerce.sdk.catalogadministration.models.AttributeVocabularyValueLocalizedContent;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsAttribute;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsAttributeCollection;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsAttributeLocalizedContent;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsAttributeVocabularyValue;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductAttributesApi
 */
@Disabled
public class ProductAttributesApiTest {

    private final ProductAttributesApi api = new ProductAttributesApi();

    /**
     * Add a product attribute
     *
     * Add / Create Attribute
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addAttributeTest() throws ApiException {
        CatalogAdminsAttribute catalogAdminsAttribute = null;
        CatalogAdminsAttribute response = api.addAttribute(catalogAdminsAttribute);
        // TODO: test validations
    }

    /**
     * Add product attribute vocabulary value
     *
     * Add product attribute vocabulary value
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addAttributeVocabularyValueTest() throws ApiException {
        String attributeFQN = null;
        CatalogAdminsAttributeVocabularyValue catalogAdminsAttributeVocabularyValue = null;
        CatalogAdminsAttributeVocabularyValue response = api.addAttributeVocabularyValue(attributeFQN, catalogAdminsAttributeVocabularyValue);
        // TODO: test validations
    }

    /**
     * Add product attribute vocabulary value
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addAttributeVocabularyValueLocalizedContentTest() throws ApiException {
        String attributeFQN = null;
        String value = null;
        AttributeVocabularyValueLocalizedContent attributeVocabularyValueLocalizedContent = null;
        AttributeVocabularyValueLocalizedContent response = api.addAttributeVocabularyValueLocalizedContent(attributeFQN, value, attributeVocabularyValueLocalizedContent);
        // TODO: test validations
    }

    /**
     * Add product attribute localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addLocalizedContentTest() throws ApiException {
        String attributeFQN = null;
        CatalogAdminsAttributeLocalizedContent catalogAdminsAttributeLocalizedContent = null;
        CatalogAdminsAttributeLocalizedContent response = api.addLocalizedContent(attributeFQN, catalogAdminsAttributeLocalizedContent);
        // TODO: test validations
    }

    /**
     * Delete product attribute
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAttributeTest() throws ApiException {
        String attributeFQN = null;
        api.deleteAttribute(attributeFQN);
        // TODO: test validations
    }

    /**
     * Delete product attribute vocabulary value
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAttributeVocabularyValueTest() throws ApiException {
        String attributeFQN = null;
        String value = null;
        api.deleteAttributeVocabularyValue(attributeFQN, value);
        // TODO: test validations
    }

    /**
     * Delete product attribute vocabulary value localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAttributeVocabularyValueLocalizedContentTest() throws ApiException {
        String attributeFQN = null;
        String value = null;
        String localeCode = null;
        api.deleteAttributeVocabularyValueLocalizedContent(attributeFQN, value, localeCode);
        // TODO: test validations
    }

    /**
     * Delete product attribute localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteLocalizedContentTest() throws ApiException {
        String attributeFQN = null;
        String localeCode = null;
        api.deleteLocalizedContent(attributeFQN, localeCode);
        // TODO: test validations
    }

    /**
     * Get product attribute
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributeTest() throws ApiException {
        String attributeFQN = null;
        String responseGroups = null;
        CatalogAdminsAttribute response = api.getAttribute(attributeFQN, responseGroups);
        // TODO: test validations
    }

    /**
     * Get product attribute localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributeLocalizedContentTest() throws ApiException {
        String attributeFQN = null;
        String localeCode = null;
        CatalogAdminsAttributeLocalizedContent response = api.getAttributeLocalizedContent(attributeFQN, localeCode);
        // TODO: test validations
    }

    /**
     * Get product attribute localized contents
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributeLocalizedContentsTest() throws ApiException {
        String attributeFQN = null;
        List<CatalogAdminsAttributeLocalizedContent> response = api.getAttributeLocalizedContents(attributeFQN);
        // TODO: test validations
    }

    /**
     * Get attribute type rules
     *
     * Retrieves a paged list of attribute type rules according to any specified filter criteria and sort options.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributeTypeRulesTest() throws ApiException {
        Integer startIndex = null;
        Integer pageSize = null;
        String sortBy = null;
        String filter = null;
        AttributeTypeRuleCollection response = api.getAttributeTypeRules(startIndex, pageSize, sortBy, filter);
        // TODO: test validations
    }

    /**
     * Get product attribute vocabulary value
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributeVocabularyValueTest() throws ApiException {
        String attributeFQN = null;
        String value = null;
        CatalogAdminsAttributeVocabularyValue response = api.getAttributeVocabularyValue(attributeFQN, value);
        // TODO: test validations
    }

    /**
     * Get product attribute vocabulary value localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributeVocabularyValueLocalizedContentTest() throws ApiException {
        String attributeFQN = null;
        String value = null;
        String localeCode = null;
        AttributeVocabularyValueLocalizedContent response = api.getAttributeVocabularyValueLocalizedContent(attributeFQN, value, localeCode);
        // TODO: test validations
    }

    /**
     * Get product attribute vocabulary value localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributeVocabularyValueLocalizedContentsTest() throws ApiException {
        String attributeFQN = null;
        String value = null;
        List<AttributeVocabularyValueLocalizedContent> response = api.getAttributeVocabularyValueLocalizedContents(attributeFQN, value);
        // TODO: test validations
    }

    /**
     * Get product attribute vocabulary values
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributeVocabularyValuesTest() throws ApiException {
        String attributeFQN = null;
        String responseGroups = null;
        List<CatalogAdminsAttributeVocabularyValue> response = api.getAttributeVocabularyValues(attributeFQN, responseGroups);
        // TODO: test validations
    }

    /**
     * Get product attributes
     *
     * Get product attributes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributesTest() throws ApiException {
        Integer startIndex = null;
        Integer pageSize = null;
        String sortBy = null;
        String filter = null;
        String responseGroups = null;
        CatalogAdminsAttributeCollection response = api.getAttributes(startIndex, pageSize, sortBy, filter, responseGroups);
        // TODO: test validations
    }

    /**
     * Update a product attribute
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAttributeTest() throws ApiException {
        String attributeFQN = null;
        CatalogAdminsAttribute catalogAdminsAttribute = null;
        CatalogAdminsAttribute response = api.updateAttribute(attributeFQN, catalogAdminsAttribute);
        // TODO: test validations
    }

    /**
     * Update product attribute vocabulary value
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAttributeVocabularyValueTest() throws ApiException {
        String attributeFQN = null;
        String value = null;
        CatalogAdminsAttributeVocabularyValue catalogAdminsAttributeVocabularyValue = null;
        CatalogAdminsAttributeVocabularyValue response = api.updateAttributeVocabularyValue(attributeFQN, value, catalogAdminsAttributeVocabularyValue);
        // TODO: test validations
    }

    /**
     * Update product attribute vocabulary value localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAttributeVocabularyValueLocalizedContentTest() throws ApiException {
        String attributeFQN = null;
        String value = null;
        String localeCode = null;
        AttributeVocabularyValueLocalizedContent attributeVocabularyValueLocalizedContent = null;
        AttributeVocabularyValueLocalizedContent response = api.updateAttributeVocabularyValueLocalizedContent(attributeFQN, value, localeCode, attributeVocabularyValueLocalizedContent);
        // TODO: test validations
    }

    /**
     * Update product attribute vocabulary value localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAttributeVocabularyValueLocalizedContentsTest() throws ApiException {
        String attributeFQN = null;
        String value = null;
        List<AttributeVocabularyValueLocalizedContent> attributeVocabularyValueLocalizedContent = null;
        List<AttributeVocabularyValueLocalizedContent> response = api.updateAttributeVocabularyValueLocalizedContents(attributeFQN, value, attributeVocabularyValueLocalizedContent);
        // TODO: test validations
    }

    /**
     * Update product attribute vocabulary values
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAttributeVocabularyValuesTest() throws ApiException {
        String attributeFQN = null;
        List<CatalogAdminsAttributeVocabularyValue> catalogAdminsAttributeVocabularyValue = null;
        List<CatalogAdminsAttributeVocabularyValue> response = api.updateAttributeVocabularyValues(attributeFQN, catalogAdminsAttributeVocabularyValue);
        // TODO: test validations
    }

    /**
     * Update product attribute localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLocalizedContentTest() throws ApiException {
        String attributeFQN = null;
        String localeCode = null;
        CatalogAdminsAttributeLocalizedContent catalogAdminsAttributeLocalizedContent = null;
        CatalogAdminsAttributeLocalizedContent response = api.updateLocalizedContent(attributeFQN, localeCode, catalogAdminsAttributeLocalizedContent);
        // TODO: test validations
    }

    /**
     * Update product attribute localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLocalizedContentsTest() throws ApiException {
        String attributeFQN = null;
        List<CatalogAdminsAttributeLocalizedContent> catalogAdminsAttributeLocalizedContent = null;
        List<CatalogAdminsAttributeLocalizedContent> response = api.updateLocalizedContents(attributeFQN, catalogAdminsAttributeLocalizedContent);
        // TODO: test validations
    }

}
