/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.catalogadministration.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsDiscountCondition;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsDiscountTarget;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsThresholdMessage;
import com.kibocommerce.sdk.catalogadministration.models.DiscountLocalizedContent;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for CatalogAdminsDiscount
 */
public class CatalogAdminsDiscountTest {
    private final CatalogAdminsDiscount model = new CatalogAdminsDiscount();

    /**
     * Model tests for CatalogAdminsDiscount
     */
    @Test
    public void testCatalogAdminsDiscount() {
        // TODO: test CatalogAdminsDiscount
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'content'
     */
    @Test
    public void contentTest() {
        // TODO: test content
    }

    /**
     * Test the property 'scope'
     */
    @Test
    public void scopeTest() {
        // TODO: test scope
    }

    /**
     * Test the property 'conditions'
     */
    @Test
    public void conditionsTest() {
        // TODO: test conditions
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'currentRedemptionCount'
     */
    @Test
    public void currentRedemptionCountTest() {
        // TODO: test currentRedemptionCount
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'amountType'
     */
    @Test
    public void amountTypeTest() {
        // TODO: test amountType
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'canBeDeleted'
     */
    @Test
    public void canBeDeletedTest() {
        // TODO: test canBeDeleted
    }

    /**
     * Test the property 'doesNotApplyToSalePrice'
     */
    @Test
    public void doesNotApplyToSalePriceTest() {
        // TODO: test doesNotApplyToSalePrice
    }

    /**
     * Test the property 'doesNotApplyToProductsWithSalePrice'
     */
    @Test
    public void doesNotApplyToProductsWithSalePriceTest() {
        // TODO: test doesNotApplyToProductsWithSalePrice
    }

    /**
     * Test the property 'isDisabled'
     */
    @Test
    public void isDisabledTest() {
        // TODO: test isDisabled
    }

    /**
     * Test the property 'maximumUsesPerUser'
     */
    @Test
    public void maximumUsesPerUserTest() {
        // TODO: test maximumUsesPerUser
    }

    /**
     * Test the property 'maximumDiscountImpactPerOrder'
     */
    @Test
    public void maximumDiscountImpactPerOrderTest() {
        // TODO: test maximumDiscountImpactPerOrder
    }

    /**
     * Test the property 'maximumDiscountImpactPerRedemption'
     */
    @Test
    public void maximumDiscountImpactPerRedemptionTest() {
        // TODO: test maximumDiscountImpactPerRedemption
    }

    /**
     * Test the property 'maximumRedemptionsPerOrder'
     */
    @Test
    public void maximumRedemptionsPerOrderTest() {
        // TODO: test maximumRedemptionsPerOrder
    }

    /**
     * Test the property 'includedPriceLists'
     */
    @Test
    public void includedPriceListsTest() {
        // TODO: test includedPriceLists
    }

    /**
     * Test the property 'doesNotApplyToMultiShipToOrders'
     */
    @Test
    public void doesNotApplyToMultiShipToOrdersTest() {
        // TODO: test doesNotApplyToMultiShipToOrders
    }

    /**
     * Test the property 'isBxGx'
     */
    @Test
    public void isBxGxTest() {
        // TODO: test isBxGx
    }

    /**
     * Test the property 'canBeStackedUpon'
     */
    @Test
    public void canBeStackedUponTest() {
        // TODO: test canBeStackedUpon
    }

    /**
     * Test the property 'stackingLayer'
     */
    @Test
    public void stackingLayerTest() {
        // TODO: test stackingLayer
    }

    /**
     * Test the property 'thresholdMessage'
     */
    @Test
    public void thresholdMessageTest() {
        // TODO: test thresholdMessage
    }

    /**
     * Test the property 'preventLineItemShippingDiscounts'
     */
    @Test
    public void preventLineItemShippingDiscountsTest() {
        // TODO: test preventLineItemShippingDiscounts
    }

    /**
     * Test the property 'preventOrderProductDiscounts'
     */
    @Test
    public void preventOrderProductDiscountsTest() {
        // TODO: test preventOrderProductDiscounts
    }

    /**
     * Test the property 'preventOrderShippingDiscounts'
     */
    @Test
    public void preventOrderShippingDiscountsTest() {
        // TODO: test preventOrderShippingDiscounts
    }

    /**
     * Test the property 'hasPurchaseConditions'
     */
    @Test
    public void hasPurchaseConditionsTest() {
        // TODO: test hasPurchaseConditions
    }

    /**
     * Test the property 'purchaseRequirementType'
     */
    @Test
    public void purchaseRequirementTypeTest() {
        // TODO: test purchaseRequirementType
    }

    /**
     * Test the property 'auditInfo'
     */
    @Test
    public void auditInfoTest() {
        // TODO: test auditInfo
    }

    /**
     * Test the property 'tagCodes'
     */
    @Test
    public void tagCodesTest() {
        // TODO: test tagCodes
    }

    /**
     * Test the property 'isSubscriptionDiscount'
     */
    @Test
    public void isSubscriptionDiscountTest() {
        // TODO: test isSubscriptionDiscount
    }

}
