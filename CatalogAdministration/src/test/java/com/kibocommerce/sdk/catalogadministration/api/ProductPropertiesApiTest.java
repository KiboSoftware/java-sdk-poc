/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsProductProperty;
import com.kibocommerce.sdk.catalogadministration.models.ProductPropertyValueLocalizedContent;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductPropertiesApi
 */
@Disabled
public class ProductPropertiesApiTest {

    private final ProductPropertiesApi api = new ProductPropertiesApi();

    /**
     * Add property
     *
     * Add property
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addPropertyTest() throws ApiException {
        String productCode = null;
        CatalogAdminsProductProperty catalogAdminsProductProperty = null;
        CatalogAdminsProductProperty response = api.addProperty(productCode, catalogAdminsProductProperty);
        // TODO: test validations
    }

    /**
     * Add property value localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addPropertyValueLocalizedContentTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        String value = null;
        ProductPropertyValueLocalizedContent productPropertyValueLocalizedContent = null;
        ProductPropertyValueLocalizedContent response = api.addPropertyValueLocalizedContent(productCode, attributeFQN, value, productPropertyValueLocalizedContent);
        // TODO: test validations
    }

    /**
     * Delete property
     *
     * Delete Property
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePropertyTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        api.deleteProperty(productCode, attributeFQN);
        // TODO: test validations
    }

    /**
     * Delete property value localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePropertyValueLocalizedContentTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        String value = null;
        String localeCode = null;
        api.deletePropertyValueLocalizedContent(productCode, attributeFQN, value, localeCode);
        // TODO: test validations
    }

    /**
     * Get properties
     *
     * Get properties for the product
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPropertiesTest() throws ApiException {
        String productCode = null;
        List<CatalogAdminsProductProperty> response = api.getProperties(productCode);
        // TODO: test validations
    }

    /**
     * Get property
     *
     * Get individual property
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPropertyTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        CatalogAdminsProductProperty response = api.getProperty(productCode, attributeFQN);
        // TODO: test validations
    }

    /**
     * Get property value localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPropertyValueLocalizedContentTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        String value = null;
        String localeCode = null;
        ProductPropertyValueLocalizedContent response = api.getPropertyValueLocalizedContent(productCode, attributeFQN, value, localeCode);
        // TODO: test validations
    }

    /**
     * Get property value localized contents
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPropertyValueLocalizedContentsTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        String value = null;
        List<ProductPropertyValueLocalizedContent> response = api.getPropertyValueLocalizedContents(productCode, attributeFQN, value);
        // TODO: test validations
    }

    /**
     * Update property
     *
     * Update property
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePropertyTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        CatalogAdminsProductProperty catalogAdminsProductProperty = null;
        CatalogAdminsProductProperty response = api.updateProperty(productCode, attributeFQN, catalogAdminsProductProperty);
        // TODO: test validations
    }

    /**
     * Update property value localized content
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePropertyValueLocalizedContentTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        String value = null;
        String localeCode = null;
        ProductPropertyValueLocalizedContent productPropertyValueLocalizedContent = null;
        ProductPropertyValueLocalizedContent response = api.updatePropertyValueLocalizedContent(productCode, attributeFQN, value, localeCode, productPropertyValueLocalizedContent);
        // TODO: test validations
    }

    /**
     * Update property value localized contents
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePropertyValueLocalizedContentsTest() throws ApiException {
        String productCode = null;
        String attributeFQN = null;
        String value = null;
        List<ProductPropertyValueLocalizedContent> productPropertyValueLocalizedContent = null;
        List<ProductPropertyValueLocalizedContent> response = api.updatePropertyValueLocalizedContents(productCode, attributeFQN, value, productPropertyValueLocalizedContent);
        // TODO: test validations
    }

}
