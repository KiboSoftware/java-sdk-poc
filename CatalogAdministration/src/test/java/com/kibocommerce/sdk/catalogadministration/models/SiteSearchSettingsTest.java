/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsSpellcheck;
import com.kibocommerce.sdk.catalogadministration.models.FieldValueBoost;
import com.kibocommerce.sdk.catalogadministration.models.SiteSearchFieldWeight;
import com.kibocommerce.sdk.catalogadministration.models.TypoTolerance;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for SiteSearchSettings
 */
public class SiteSearchSettingsTest {
    private final SiteSearchSettings model = new SiteSearchSettings();

    /**
     * Model tests for SiteSearchSettings
     */
    @Test
    public void testSiteSearchSettings() {
        // TODO: test SiteSearchSettings
    }

    /**
     * Test the property 'sowBehavior'
     */
    @Test
    public void sowBehaviorTest() {
        // TODO: test sowBehavior
    }

    /**
     * Test the property 'fieldWeights'
     */
    @Test
    public void fieldWeightsTest() {
        // TODO: test fieldWeights
    }

    /**
     * Test the property 'customBoosts'
     */
    @Test
    public void customBoostsTest() {
        // TODO: test customBoosts
    }

    /**
     * Test the property 'fieldValueBoost'
     */
    @Test
    public void fieldValueBoostTest() {
        // TODO: test fieldValueBoost
    }

    /**
     * Test the property 'multiTermSynMinimumMatchPercents'
     */
    @Test
    public void multiTermSynMinimumMatchPercentsTest() {
        // TODO: test multiTermSynMinimumMatchPercents
    }

    /**
     * Test the property 'minimumMatchPercents'
     */
    @Test
    public void minimumMatchPercentsTest() {
        // TODO: test minimumMatchPercents
    }

    /**
     * Test the property 'phraseSlop'
     */
    @Test
    public void phraseSlopTest() {
        // TODO: test phraseSlop
    }

    /**
     * Test the property 'twoWordPhraseBoost'
     */
    @Test
    public void twoWordPhraseBoostTest() {
        // TODO: test twoWordPhraseBoost
    }

    /**
     * Test the property 'personalizationExperience'
     */
    @Test
    public void personalizationExperienceTest() {
        // TODO: test personalizationExperience
    }

    /**
     * Test the property 'personalizationFactor'
     */
    @Test
    public void personalizationFactorTest() {
        // TODO: test personalizationFactor
    }

    /**
     * Test the property 'searchChildProductsByDefault'
     */
    @Test
    public void searchChildProductsByDefaultTest() {
        // TODO: test searchChildProductsByDefault
    }

    /**
     * Test the property 'crossFieldAdditiveScoreFactor'
     */
    @Test
    public void crossFieldAdditiveScoreFactorTest() {
        // TODO: test crossFieldAdditiveScoreFactor
    }

    /**
     * Test the property 'typoTolerance'
     */
    @Test
    public void typoToleranceTest() {
        // TODO: test typoTolerance
    }

    /**
     * Test the property 'spellcheck'
     */
    @Test
    public void spellcheckTest() {
        // TODO: test spellcheck
    }

}
