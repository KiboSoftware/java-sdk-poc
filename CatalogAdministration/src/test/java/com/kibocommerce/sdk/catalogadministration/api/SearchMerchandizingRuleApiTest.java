/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsSearchMerchandizingRule;
import com.kibocommerce.sdk.catalogadministration.models.SearchMerchandizingRuleCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SearchMerchandizingRuleApi
 */
@Disabled
public class SearchMerchandizingRuleApiTest {

    private final SearchMerchandizingRuleApi api = new SearchMerchandizingRuleApi();

    /**
     * Clone Search Merchandizing Rule
     *
     * Clone Search Merchandizing Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cloneSearchMerchandizingRuleTest() throws ApiException {
        String code = null;
        CatalogAdminsSearchMerchandizingRule response = api.cloneSearchMerchandizingRule(code);
        // TODO: test validations
    }

    /**
     * Create Search Merchandizing Rule
     *
     * Create Search Merchandizing Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSearchMerchandizingRuleTest() throws ApiException {
        CatalogAdminsSearchMerchandizingRule catalogAdminsSearchMerchandizingRule = null;
        CatalogAdminsSearchMerchandizingRule response = api.createSearchMerchandizingRule(catalogAdminsSearchMerchandizingRule);
        // TODO: test validations
    }

    /**
     * Delete Search Merchandizing Rule
     *
     * Delete Search Merchandizing Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSearchMerchandizingRuleTest() throws ApiException {
        String code = null;
        api.deleteSearchMerchandizingRule(code);
        // TODO: test validations
    }

    /**
     * Get Search Merchandizing Rule
     *
     * Get Search Merchandizing Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSearchMerchandizingRuleTest() throws ApiException {
        String code = null;
        CatalogAdminsSearchMerchandizingRule response = api.getSearchMerchandizingRule(code);
        // TODO: test validations
    }

    /**
     * Get Search Merchandizing Rules
     *
     * Get Search Merchandizing Rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSearchMerchandizingRulesTest() throws ApiException {
        Integer startIndex = null;
        Integer pageSize = null;
        String sortBy = null;
        String filter = null;
        String responseGroups = null;
        String q = null;
        SearchMerchandizingRuleCollection response = api.getSearchMerchandizingRules(startIndex, pageSize, sortBy, filter, responseGroups, q);
        // TODO: test validations
    }

    /**
     * Update Search Merchandizing Rule
     *
     * Update Search Merchandizing Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSearchMerchandizingRuleTest() throws ApiException {
        String code = null;
        CatalogAdminsSearchMerchandizingRule catalogAdminsSearchMerchandizingRule = null;
        CatalogAdminsSearchMerchandizingRule response = api.updateSearchMerchandizingRule(code, catalogAdminsSearchMerchandizingRule);
        // TODO: test validations
    }

}
