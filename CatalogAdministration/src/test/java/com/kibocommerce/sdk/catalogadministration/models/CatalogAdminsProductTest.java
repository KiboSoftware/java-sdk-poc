/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.catalogadministration.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsBundledProduct;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsDiscount;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsProductCollectionInfo;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsProductImageGroup;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsProductInventoryInfo;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsProductOption;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsProductPrice;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsProductPricingBehaviorInfo;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsProductProperty;
import com.kibocommerce.sdk.catalogadministration.models.CommerceRuntimeMeasurement;
import com.kibocommerce.sdk.catalogadministration.models.ProductCollectionProduct;
import com.kibocommerce.sdk.catalogadministration.models.ProductExtra;
import com.kibocommerce.sdk.catalogadministration.models.ProductInCatalogInfo;
import com.kibocommerce.sdk.catalogadministration.models.ProductLocalizedContent;
import com.kibocommerce.sdk.catalogadministration.models.ProductLocalizedSEOContent;
import com.kibocommerce.sdk.catalogadministration.models.ProductPublishingInfo;
import com.kibocommerce.sdk.catalogadministration.models.ProductSupplierInfo;
import com.kibocommerce.sdk.catalogadministration.models.ProductVariationOption;
import com.kibocommerce.sdk.catalogadministration.models.SlicingSettings;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for CatalogAdminsProduct
 */
public class CatalogAdminsProductTest {
    private final CatalogAdminsProduct model = new CatalogAdminsProduct();

    /**
     * Model tests for CatalogAdminsProduct
     */
    @Test
    public void testCatalogAdminsProduct() {
        // TODO: test CatalogAdminsProduct
    }

    /**
     * Test the property 'productCode'
     */
    @Test
    public void productCodeTest() {
        // TODO: test productCode
    }

    /**
     * Test the property 'productUsage'
     */
    @Test
    public void productUsageTest() {
        // TODO: test productUsage
    }

    /**
     * Test the property 'fulfillmentTypesSupported'
     */
    @Test
    public void fulfillmentTypesSupportedTest() {
        // TODO: test fulfillmentTypesSupported
    }

    /**
     * Test the property 'masterCatalogId'
     */
    @Test
    public void masterCatalogIdTest() {
        // TODO: test masterCatalogId
    }

    /**
     * Test the property 'productSequence'
     */
    @Test
    public void productSequenceTest() {
        // TODO: test productSequence
    }

    /**
     * Test the property 'productTypeId'
     */
    @Test
    public void productTypeIdTest() {
        // TODO: test productTypeId
    }

    /**
     * Test the property 'isValidForProductType'
     */
    @Test
    public void isValidForProductTypeTest() {
        // TODO: test isValidForProductType
    }

    /**
     * Test the property 'baseProductCode'
     */
    @Test
    public void baseProductCodeTest() {
        // TODO: test baseProductCode
    }

    /**
     * Test the property 'productInCatalogs'
     */
    @Test
    public void productInCatalogsTest() {
        // TODO: test productInCatalogs
    }

    /**
     * Test the property 'content'
     */
    @Test
    public void contentTest() {
        // TODO: test content
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'pricingBehavior'
     */
    @Test
    public void pricingBehaviorTest() {
        // TODO: test pricingBehavior
    }

    /**
     * Test the property 'seoContent'
     */
    @Test
    public void seoContentTest() {
        // TODO: test seoContent
    }

    /**
     * Test the property 'options'
     */
    @Test
    public void optionsTest() {
        // TODO: test options
    }

    /**
     * Test the property 'extras'
     */
    @Test
    public void extrasTest() {
        // TODO: test extras
    }

    /**
     * Test the property 'properties'
     */
    @Test
    public void propertiesTest() {
        // TODO: test properties
    }

    /**
     * Test the property 'isTaxable'
     */
    @Test
    public void isTaxableTest() {
        // TODO: test isTaxable
    }

    /**
     * Test the property 'inventoryInfo'
     */
    @Test
    public void inventoryInfoTest() {
        // TODO: test inventoryInfo
    }

    /**
     * Test the property 'shippingClassId'
     */
    @Test
    public void shippingClassIdTest() {
        // TODO: test shippingClassId
    }

    /**
     * Test the property 'isRecurring'
     */
    @Test
    public void isRecurringTest() {
        // TODO: test isRecurring
    }

    /**
     * Test the property 'upc'
     */
    @Test
    public void upcTest() {
        // TODO: test upc
    }

    /**
     * Test the property 'supplierInfo'
     */
    @Test
    public void supplierInfoTest() {
        // TODO: test supplierInfo
    }

    /**
     * Test the property 'isPackagedStandAlone'
     */
    @Test
    public void isPackagedStandAloneTest() {
        // TODO: test isPackagedStandAlone
    }

    /**
     * Test the property 'standAlonePackageType'
     */
    @Test
    public void standAlonePackageTypeTest() {
        // TODO: test standAlonePackageType
    }

    /**
     * Test the property 'packageHeight'
     */
    @Test
    public void packageHeightTest() {
        // TODO: test packageHeight
    }

    /**
     * Test the property 'packageWidth'
     */
    @Test
    public void packageWidthTest() {
        // TODO: test packageWidth
    }

    /**
     * Test the property 'packageLength'
     */
    @Test
    public void packageLengthTest() {
        // TODO: test packageLength
    }

    /**
     * Test the property 'packageWeight'
     */
    @Test
    public void packageWeightTest() {
        // TODO: test packageWeight
    }

    /**
     * Test the property 'applicableDiscounts'
     */
    @Test
    public void applicableDiscountsTest() {
        // TODO: test applicableDiscounts
    }

    /**
     * Test the property 'isVariation'
     */
    @Test
    public void isVariationTest() {
        // TODO: test isVariation
    }

    /**
     * Test the property 'variationKey'
     */
    @Test
    public void variationKeyTest() {
        // TODO: test variationKey
    }

    /**
     * Test the property 'hasConfigurableOptions'
     */
    @Test
    public void hasConfigurableOptionsTest() {
        // TODO: test hasConfigurableOptions
    }

    /**
     * Test the property 'hasStandAloneOptions'
     */
    @Test
    public void hasStandAloneOptionsTest() {
        // TODO: test hasStandAloneOptions
    }

    /**
     * Test the property 'variationOptions'
     */
    @Test
    public void variationOptionsTest() {
        // TODO: test variationOptions
    }

    /**
     * Test the property 'publishingInfo'
     */
    @Test
    public void publishingInfoTest() {
        // TODO: test publishingInfo
    }

    /**
     * Test the property 'bundledProducts'
     */
    @Test
    public void bundledProductsTest() {
        // TODO: test bundledProducts
    }

    /**
     * Test the property 'productCollectionProducts'
     */
    @Test
    public void productCollectionProductsTest() {
        // TODO: test productCollectionProducts
    }

    /**
     * Test the property 'productCollections'
     */
    @Test
    public void productCollectionsTest() {
        // TODO: test productCollections
    }

    /**
     * Test the property 'productImageGroups'
     */
    @Test
    public void productImageGroupsTest() {
        // TODO: test productImageGroups
    }

    /**
     * Test the property 'auditInfo'
     */
    @Test
    public void auditInfoTest() {
        // TODO: test auditInfo
    }

    /**
     * Test the property 'slicingSettings'
     */
    @Test
    public void slicingSettingsTest() {
        // TODO: test slicingSettings
    }

    /**
     * Test the property 'primaryProductCollectionCode'
     */
    @Test
    public void primaryProductCollectionCodeTest() {
        // TODO: test primaryProductCollectionCode
    }

}
