/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.catalogadministration.models.TargetedCategory;
import com.kibocommerce.sdk.catalogadministration.models.TargetedProduct;
import com.kibocommerce.sdk.catalogadministration.models.TargetedShippingMethod;
import com.kibocommerce.sdk.catalogadministration.models.TargetedShippingZone;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for CatalogAdminsDiscountTarget
 */
public class CatalogAdminsDiscountTargetTest {
    private final CatalogAdminsDiscountTarget model = new CatalogAdminsDiscountTarget();

    /**
     * Model tests for CatalogAdminsDiscountTarget
     */
    @Test
    public void testCatalogAdminsDiscountTarget() {
        // TODO: test CatalogAdminsDiscountTarget
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'includeAllProducts'
     */
    @Test
    public void includeAllProductsTest() {
        // TODO: test includeAllProducts
    }

    /**
     * Test the property 'includedCategoriesOperator'
     */
    @Test
    public void includedCategoriesOperatorTest() {
        // TODO: test includedCategoriesOperator
    }

    /**
     * Test the property 'categories'
     */
    @Test
    public void categoriesTest() {
        // TODO: test categories
    }

    /**
     * Test the property 'excludedCategoriesOperator'
     */
    @Test
    public void excludedCategoriesOperatorTest() {
        // TODO: test excludedCategoriesOperator
    }

    /**
     * Test the property 'excludedCategories'
     */
    @Test
    public void excludedCategoriesTest() {
        // TODO: test excludedCategories
    }

    /**
     * Test the property 'products'
     */
    @Test
    public void productsTest() {
        // TODO: test products
    }

    /**
     * Test the property 'excludedProducts'
     */
    @Test
    public void excludedProductsTest() {
        // TODO: test excludedProducts
    }

    /**
     * Test the property 'excludeItemsWithExistingShippingDiscounts'
     */
    @Test
    public void excludeItemsWithExistingShippingDiscountsTest() {
        // TODO: test excludeItemsWithExistingShippingDiscounts
    }

    /**
     * Test the property 'excludeItemsWithExistingProductDiscounts'
     */
    @Test
    public void excludeItemsWithExistingProductDiscountsTest() {
        // TODO: test excludeItemsWithExistingProductDiscounts
    }

    /**
     * Test the property 'shippingMethods'
     */
    @Test
    public void shippingMethodsTest() {
        // TODO: test shippingMethods
    }

    /**
     * Test the property 'shippingZones'
     */
    @Test
    public void shippingZonesTest() {
        // TODO: test shippingZones
    }

    /**
     * Test the property 'doNotApplyToHandlingFees'
     */
    @Test
    public void doNotApplyToHandlingFeesTest() {
        // TODO: test doNotApplyToHandlingFees
    }

    /**
     * Test the property 'maximumQuantityPerRedemption'
     */
    @Test
    public void maximumQuantityPerRedemptionTest() {
        // TODO: test maximumQuantityPerRedemption
    }

    /**
     * Test the property 'appliesToLeastExpensiveProductsFirst'
     */
    @Test
    public void appliesToLeastExpensiveProductsFirstTest() {
        // TODO: test appliesToLeastExpensiveProductsFirst
    }

}
