/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.catalogadministration.models.ProductSortDefinition;
import com.kibocommerce.sdk.catalogadministration.models.ProductSortDefinitionPagedCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductSortDefinitionsApi
 */
@Disabled
public class ProductSortDefinitionsApiTest {

    private final ProductSortDefinitionsApi api = new ProductSortDefinitionsApi();

    /**
     * Add product sort definition
     *
     * Adds a new product sort definition.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addProductSortDefinitionTest() throws ApiException {
        Boolean useProvidedId = null;
        ProductSortDefinition productSortDefinition = null;
        ProductSortDefinition response = api.addProductSortDefinition(useProvidedId, productSortDefinition);
        // TODO: test validations
    }

    /**
     * Delete product sort definition
     *
     * Deletes the product sort definition specified by its ProductSortDefinitionID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProductSortDefinitionTest() throws ApiException {
        Integer productSortDefinitionId = null;
        api.deleteProductSortDefinition(productSortDefinitionId);
        // TODO: test validations
    }

    /**
     * Get product sort definition
     *
     * Gets a single product sort definition.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductSortDefinitionTest() throws ApiException {
        Integer productSortDefinitionId = null;
        ProductSortDefinition response = api.getProductSortDefinition(productSortDefinitionId);
        // TODO: test validations
    }

    /**
     * Get product sort definitions
     *
     * Retrieves a list of product sort definitions according to any specified filter criteria and sort options.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductSortDefinitionsTest() throws ApiException {
        Integer startIndex = null;
        Integer pageSize = null;
        String sortBy = null;
        String filter = null;
        ProductSortDefinitionPagedCollection response = api.getProductSortDefinitions(startIndex, pageSize, sortBy, filter);
        // TODO: test validations
    }

    /**
     * Update product sort definition
     *
     * Updates the details of a product sort definition.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProductSortDefinitionTest() throws ApiException {
        Integer productSortDefinitionId = null;
        ProductSortDefinition productSortDefinition = null;
        ProductSortDefinition response = api.updateProductSortDefinition(productSortDefinitionId, productSortDefinition);
        // TODO: test validations
    }

}
