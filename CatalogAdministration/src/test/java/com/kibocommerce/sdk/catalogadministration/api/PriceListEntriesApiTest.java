/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.api;

import com.kibocommerce.sdk.common.ApiException;
import java.time.OffsetDateTime;
import com.kibocommerce.sdk.catalogadministration.models.PriceListEntry;
import com.kibocommerce.sdk.catalogadministration.models.PriceListEntryCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PriceListEntriesApi
 */
@Disabled
public class PriceListEntriesApiTest {

    private final PriceListEntriesApi api = new PriceListEntriesApi();

    /**
     * Add price list entry
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addPriceListEntryTest() throws ApiException {
        String priceListCode = null;
        PriceListEntry priceListEntry = null;
        PriceListEntry response = api.addPriceListEntry(priceListCode, priceListEntry);
        // TODO: test validations
    }

    /**
     * Bulk add price list entries
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bulkAddPriceListEntriesTest() throws ApiException {
        Boolean publishEvents = null;
        Boolean invalidateCache = null;
        List<PriceListEntry> priceListEntry = null;
        api.bulkAddPriceListEntries(publishEvents, invalidateCache, priceListEntry);
        // TODO: test validations
    }

    /**
     * Bulk delete price list entries
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bulkDeletePriceListEntriesTest() throws ApiException {
        Boolean publishEvents = null;
        Boolean invalidateCache = null;
        List<PriceListEntry> priceListEntry = null;
        api.bulkDeletePriceListEntries(publishEvents, invalidateCache, priceListEntry);
        // TODO: test validations
    }

    /**
     * Bulk update price list entries
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bulkUpdatePriceListEntriesTest() throws ApiException {
        Boolean publishEvents = null;
        Boolean invalidateCache = null;
        List<PriceListEntry> priceListEntry = null;
        api.bulkUpdatePriceListEntries(publishEvents, invalidateCache, priceListEntry);
        // TODO: test validations
    }

    /**
     * Delete price list entry
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePriceListEntryTest() throws ApiException {
        String priceListCode = null;
        String productCode = null;
        String currencyCode = null;
        OffsetDateTime startDate = null;
        api.deletePriceListEntry(priceListCode, productCode, currencyCode, startDate);
        // TODO: test validations
    }

    /**
     * Get price list entries
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPriceListEntriesTest() throws ApiException {
        String priceListCode = null;
        Integer startIndex = null;
        Integer pageSize = null;
        String sortBy = null;
        String filter = null;
        PriceListEntryCollection response = api.getPriceListEntries(priceListCode, startIndex, pageSize, sortBy, filter);
        // TODO: test validations
    }

    /**
     * Get price list entry
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPriceListEntryTest() throws ApiException {
        String priceListCode = null;
        String productCode = null;
        String currencyCode = null;
        OffsetDateTime startDate = null;
        PriceListEntry response = api.getPriceListEntry(priceListCode, productCode, currencyCode, startDate);
        // TODO: test validations
    }

    /**
     * Update price list entry
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePriceListEntryTest() throws ApiException {
        String priceListCode = null;
        String productCode = null;
        String currencyCode = null;
        OffsetDateTime startDate = null;
        PriceListEntry priceListEntry = null;
        PriceListEntry response = api.updatePriceListEntry(priceListCode, productCode, currencyCode, startDate, priceListEntry);
        // TODO: test validations
    }

}
