/*
 * Kibo PricingRuntime Service
 * OpenAPI Spec for Kibo PricingRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.pricingstorefront.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PricingRuntimeDiscountCondition
 */
public class PricingRuntimeDiscountConditionTest {
    private final PricingRuntimeDiscountCondition model = new PricingRuntimeDiscountCondition();

    /**
     * Model tests for PricingRuntimeDiscountCondition
     */
    @Test
    public void testPricingRuntimeDiscountCondition() {
        // TODO: test PricingRuntimeDiscountCondition
    }

    /**
     * Test the property 'requiresCoupon'
     */
    @Test
    public void requiresCouponTest() {
        // TODO: test requiresCoupon
    }

    /**
     * Test the property 'couponCode'
     */
    @Test
    public void couponCodeTest() {
        // TODO: test couponCode
    }

    /**
     * Test the property 'minimumQuantityProductsRequiredInCategories'
     */
    @Test
    public void minimumQuantityProductsRequiredInCategoriesTest() {
        // TODO: test minimumQuantityProductsRequiredInCategories
    }

    /**
     * Test the property 'includedCategoryIds'
     */
    @Test
    public void includedCategoryIdsTest() {
        // TODO: test includedCategoryIds
    }

    /**
     * Test the property 'excludedCategoryIds'
     */
    @Test
    public void excludedCategoryIdsTest() {
        // TODO: test excludedCategoryIds
    }

    /**
     * Test the property 'minimumQuantityRequiredProducts'
     */
    @Test
    public void minimumQuantityRequiredProductsTest() {
        // TODO: test minimumQuantityRequiredProducts
    }

    /**
     * Test the property 'includedProductCodes'
     */
    @Test
    public void includedProductCodesTest() {
        // TODO: test includedProductCodes
    }

    /**
     * Test the property 'excludedProductCodes'
     */
    @Test
    public void excludedProductCodesTest() {
        // TODO: test excludedProductCodes
    }

    /**
     * Test the property 'paymentWorkflows'
     */
    @Test
    public void paymentWorkflowsTest() {
        // TODO: test paymentWorkflows
    }

    /**
     * Test the property 'customerSegmentIds'
     */
    @Test
    public void customerSegmentIdsTest() {
        // TODO: test customerSegmentIds
    }

    /**
     * Test the property 'minimumOrderAmount'
     */
    @Test
    public void minimumOrderAmountTest() {
        // TODO: test minimumOrderAmount
    }

    /**
     * Test the property 'maximumOrderAmount'
     */
    @Test
    public void maximumOrderAmountTest() {
        // TODO: test maximumOrderAmount
    }

    /**
     * Test the property 'minimumLifetimeValueAmount'
     */
    @Test
    public void minimumLifetimeValueAmountTest() {
        // TODO: test minimumLifetimeValueAmount
    }

    /**
     * Test the property 'startDate'
     */
    @Test
    public void startDateTest() {
        // TODO: test startDate
    }

    /**
     * Test the property 'expirationDate'
     */
    @Test
    public void expirationDateTest() {
        // TODO: test expirationDate
    }

    /**
     * Test the property 'minimumCategorySubtotalBeforeDiscounts'
     */
    @Test
    public void minimumCategorySubtotalBeforeDiscountsTest() {
        // TODO: test minimumCategorySubtotalBeforeDiscounts
    }

    /**
     * Test the property 'minDistinctProductsRequired'
     */
    @Test
    public void minDistinctProductsRequiredTest() {
        // TODO: test minDistinctProductsRequired
    }

}
