/*
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.commerce.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.commerce.models.Channel;
import com.kibocommerce.sdk.commerce.models.ChannelCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChannelApi
 */
@Disabled
public class ChannelApiTest {

    private final ChannelApi api = new ChannelApi();

    /**
     * Creates channel.
     *
     * Creates a new channel that defines a new logical business division to use for financial reporting.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createChannelTest() throws ApiException {
        Channel channel = null;
        Channel response = api.createChannel(channel);
        // TODO: test validations
    }

    /**
     * Delete Channel
     *
     * Deletes a channel specified by channel Id. After deleting this channel, assign its associated sites to another channel. Because channels are managed at the tenant level, you must associate all the tenant&#39;s sites with a channel. Sites that do not have a defined channel association cannot successfully submit orders.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteChannelTest() throws ApiException {
        String code = null;
        api.deleteChannel(code);
        // TODO: test validations
    }

    /**
     * Get Channel
     *
     * Retrieves the details of an channel specified by the channel ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChannelTest() throws ApiException {
        String code = null;
        Channel response = api.getChannel(code);
        // TODO: test validations
    }

    /**
     * Get Channels
     *
     * Retrieves a list of channels according to any specified filter criteria and sort options. All orders include a channel association that enables the company to perform financial reporting for each defined channel. Because channels are managed at the tenant level, you must associate all the tenant&#39;s sites with a channel. Sites that do not have a defined channel association cannot successfully submit orders.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChannelsTest() throws ApiException {
        Integer startIndex = null;
        Integer pageSize = null;
        String sortBy = null;
        String filter = null;
        ChannelCollection response = api.getChannels(startIndex, pageSize, sortBy, filter);
        // TODO: test validations
    }

    /**
     * Update channel.
     *
     * Updates a channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateChannelTest() throws ApiException {
        String code = null;
        Channel channel = null;
        Channel response = api.updateChannel(code, channel);
        // TODO: test validations
    }

}
