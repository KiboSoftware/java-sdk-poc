/*
 * Kibo Shipping Admin Service
 * OpenAPI Spec for Kibo Shipping Admin Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.shippingadmin.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.shippingadmin.models.CarrierConfiguration;
import com.kibocommerce.sdk.shippingadmin.models.CarrierConfigurationCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CarrierConfigurationApi
 */
@Disabled
public class CarrierConfigurationApiTest {

    private final CarrierConfigurationApi api = new CarrierConfigurationApi();

    /**
     * Create Carrier Configuration
     *
     * Create Carrier Configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createConfigurationTest() throws ApiException {
        String carrierId = null;
        CarrierConfiguration carrierConfiguration = null;
        CarrierConfiguration response = api.createConfiguration(carrierId, carrierConfiguration);
        // TODO: test validations
    }

    /**
     * Delete an existing Carrier Configuration
     *
     * Delete an existing Carrier Configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteConfigurationTest() throws ApiException {
        String carrierId = null;
        api.deleteConfiguration(carrierId);
        // TODO: test validations
    }

    /**
     * Get Carrier Configuration (for this particular site)
     *
     * Get Carrier Configuration (for this particular site)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigurationTest() throws ApiException {
        String carrierId = null;
        CarrierConfiguration response = api.getConfiguration(carrierId);
        // TODO: test validations
    }

    /**
     * Retrieves a list of Carrier Configurations according to any specified filter criteria and sort options
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigurationsTest() throws ApiException {
        Integer startIndex = null;
        Integer pageSize = null;
        String sortBy = null;
        String filter = null;
        CarrierConfigurationCollection response = api.getConfigurations(startIndex, pageSize, sortBy, filter);
        // TODO: test validations
    }

    /**
     * Update an existing Carrier Configuration
     *
     * Update an existing Carrier Configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateConfigurationTest() throws ApiException {
        String carrierId = null;
        CarrierConfiguration carrierConfiguration = null;
        CarrierConfiguration response = api.updateConfiguration(carrierId, carrierConfiguration);
        // TODO: test validations
    }

}
