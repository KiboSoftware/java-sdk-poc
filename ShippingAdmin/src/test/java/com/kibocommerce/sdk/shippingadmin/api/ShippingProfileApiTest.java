/*
 * Kibo Shipping Admin Service
 * OpenAPI Spec for Kibo Shipping Admin Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.shippingadmin.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.shippingadmin.models.HandlingFeeRule;
import com.kibocommerce.sdk.shippingadmin.models.HandlingFeeRuleCollection;
import com.kibocommerce.sdk.shippingadmin.models.ShippingAdminHttpResponseMessage;
import com.kibocommerce.sdk.shippingadmin.models.ShippingInclusionRule;
import com.kibocommerce.sdk.shippingadmin.models.ShippingInclusionRuleCollection;
import com.kibocommerce.sdk.shippingadmin.models.ShippingProfileCollection;
import com.kibocommerce.sdk.shippingadmin.models.ShippingStates;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ShippingProfileApi
 */
@Disabled
public class ShippingProfileApiTest {

    private final ShippingProfileApi api = new ShippingProfileApi();

    /**
     * Create Order Handling Fee Rule
     *
     * Create Order Handling Fee Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrderHandlingFeeRuleTest() throws ApiException {
        String profilecode = null;
        HandlingFeeRule handlingFeeRule = null;
        HandlingFeeRule response = api.createOrderHandlingFeeRule(profilecode, handlingFeeRule);
        // TODO: test validations
    }

    /**
     * Create Product Handling Fee Rule
     *
     * Create Product Handling Fee Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProductHandlingFeeRuleTest() throws ApiException {
        String profilecode = null;
        HandlingFeeRule handlingFeeRule = null;
        HandlingFeeRule response = api.createProductHandlingFeeRule(profilecode, handlingFeeRule);
        // TODO: test validations
    }

    /**
     * Create Shipping Inclusion Rule
     *
     * Create Shipping Inclusion Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createShippingInclusionRuleTest() throws ApiException {
        String profilecode = null;
        ShippingInclusionRule shippingInclusionRule = null;
        ShippingInclusionRule response = api.createShippingInclusionRule(profilecode, shippingInclusionRule);
        // TODO: test validations
    }

    /**
     * Delete Order Handling Fee Rule
     *
     * Delete Order Handling Fee Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrderHandlingFeeRuleTest() throws ApiException {
        String profilecode = null;
        String id = null;
        ShippingAdminHttpResponseMessage response = api.deleteOrderHandlingFeeRule(profilecode, id);
        // TODO: test validations
    }

    /**
     * Delete Product Handling Fee Rule
     *
     * Delete Product Handling Fee Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProductHandlingFeeRuleTest() throws ApiException {
        String profilecode = null;
        String id = null;
        api.deleteProductHandlingFeeRule(profilecode, id);
        // TODO: test validations
    }

    /**
     * Delete Shipping Inclusion Rule
     *
     * Delete Shipping Inclusion Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteShippingInclusionRuleTest() throws ApiException {
        String profilecode = null;
        String id = null;
        api.deleteShippingInclusionRule(profilecode, id);
        // TODO: test validations
    }

    /**
     * Get Order Handling Fee Rule
     *
     * Get Order Handling Fee Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrderHandlingFeeRuleTest() throws ApiException {
        String profilecode = null;
        String id = null;
        HandlingFeeRule response = api.getOrderHandlingFeeRule(profilecode, id);
        // TODO: test validations
    }

    /**
     * Get Order Handling Fee Rules
     *
     * Get Order Handling Fee Rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrderHandlingFeeRulesTest() throws ApiException {
        String profilecode = null;
        HandlingFeeRuleCollection response = api.getOrderHandlingFeeRules(profilecode);
        // TODO: test validations
    }

    /**
     * Get Product Handling Fee Rule
     *
     * Get Product Handling Fee Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductHandlingFeeRuleTest() throws ApiException {
        String profilecode = null;
        String id = null;
        HandlingFeeRule response = api.getProductHandlingFeeRule(profilecode, id);
        // TODO: test validations
    }

    /**
     * Get Product Handling Fee Rules
     *
     * Get Product Handling Fee Rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductHandlingFeeRulesTest() throws ApiException {
        String profilecode = null;
        HandlingFeeRuleCollection response = api.getProductHandlingFeeRules(profilecode);
        // TODO: test validations
    }

    /**
     * Get Shipping Profiles for the Tenant/Master Catalog
     *
     * Get Shipping Profiles for the Tenant/Master Catalog
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProfilesTest() throws ApiException {
        ShippingProfileCollection response = api.getProfiles();
        // TODO: test validations
    }

    /**
     * Get Shipping Inclusion Rule
     *
     * Get Shipping Inclusion Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getShippingInclusionRuleTest() throws ApiException {
        String profilecode = null;
        String id = null;
        ShippingInclusionRule response = api.getShippingInclusionRule(profilecode, id);
        // TODO: test validations
    }

    /**
     * Get Shipping Inclusion Rules
     *
     * Get Shipping Inclusion Rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getShippingInclusionRulesTest() throws ApiException {
        String profilecode = null;
        ShippingInclusionRuleCollection response = api.getShippingInclusionRules(profilecode);
        // TODO: test validations
    }

    /**
     * Get Configured Shipping States
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStatesTest() throws ApiException {
        String profileCode = null;
        List<ShippingStates> response = api.getStates(profileCode);
        // TODO: test validations
    }

    /**
     * Update Order Handling Fee Rule
     *
     * Update Order Handling Fee Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOrderHandlingFeeRuleTest() throws ApiException {
        String profilecode = null;
        String id = null;
        HandlingFeeRule handlingFeeRule = null;
        HandlingFeeRule response = api.updateOrderHandlingFeeRule(profilecode, id, handlingFeeRule);
        // TODO: test validations
    }

    /**
     * Update Product Handling Fee Rule
     *
     * Update Product Handling Fee Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProductHandlingFeeRuleTest() throws ApiException {
        String profilecode = null;
        String id = null;
        HandlingFeeRule handlingFeeRule = null;
        HandlingFeeRule response = api.updateProductHandlingFeeRule(profilecode, id, handlingFeeRule);
        // TODO: test validations
    }

    /**
     * Update Shipping Inclusion Rule
     *
     * Update Shipping Inclusion Rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateShippingInclusionRuleTest() throws ApiException {
        String profilecode = null;
        String id = null;
        ShippingInclusionRule shippingInclusionRule = null;
        ShippingInclusionRule response = api.updateShippingInclusionRule(profilecode, id, shippingInclusionRule);
        // TODO: test validations
    }

    /**
     * Update States
     *
     * Update States
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateStatesTest() throws ApiException {
        String profilecode = null;
        List<ShippingStates> shippingStates = null;
        List<ShippingStates> response = api.updateStates(profilecode, shippingStates);
        // TODO: test validations
    }

}
