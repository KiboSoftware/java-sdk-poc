/*
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.inventory.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.inventory.models.ItemQuantity;
import com.kibocommerce.sdk.inventory.models.RequestLocation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for InventoryRequest
 */
public class InventoryRequestTest {
    private final InventoryRequest model = new InventoryRequest();

    /**
     * Model tests for InventoryRequest
     */
    @Test
    public void testInventoryRequest() {
        // TODO: test InventoryRequest
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'items'
     */
    @Test
    public void itemsTest() {
        // TODO: test items
    }

    /**
     * Test the property 'requestLocation'
     */
    @Test
    public void requestLocationTest() {
        // TODO: test requestLocation
    }

    /**
     * Test the property 'limit'
     */
    @Test
    public void limitTest() {
        // TODO: test limit
    }

    /**
     * Test the property 'locationWhitelist'
     */
    @Test
    public void locationWhitelistTest() {
        // TODO: test locationWhitelist
    }

    /**
     * Test the property 'locationPriorityList'
     */
    @Test
    public void locationPriorityListTest() {
        // TODO: test locationPriorityList
    }

    /**
     * Test the property 'locationBlacklist'
     */
    @Test
    public void locationBlacklistTest() {
        // TODO: test locationBlacklist
    }

    /**
     * Test the property 'ignoreSafetyStock'
     */
    @Test
    public void ignoreSafetyStockTest() {
        // TODO: test ignoreSafetyStock
    }

    /**
     * Test the property 'includeNegativeInventory'
     */
    @Test
    public void includeNegativeInventoryTest() {
        // TODO: test includeNegativeInventory
    }

    /**
     * Test the property 'directShip'
     */
    @Test
    public void directShipTest() {
        // TODO: test directShip
    }

    /**
     * Test the property 'transferEnabled'
     */
    @Test
    public void transferEnabledTest() {
        // TODO: test transferEnabled
    }

    /**
     * Test the property 'pickup'
     */
    @Test
    public void pickupTest() {
        // TODO: test pickup
    }

    /**
     * Test the property 'includeInAggregateExport'
     */
    @Test
    public void includeInAggregateExportTest() {
        // TODO: test includeInAggregateExport
    }

    /**
     * Test the property 'includeInLocationExport'
     */
    @Test
    public void includeInLocationExportTest() {
        // TODO: test includeInLocationExport
    }

    /**
     * Test the property 'excludeBlockedAssignment'
     */
    @Test
    public void excludeBlockedAssignmentTest() {
        // TODO: test excludeBlockedAssignment
    }

    /**
     * Test the property 'includeAttributes'
     */
    @Test
    public void includeAttributesTest() {
        // TODO: test includeAttributes
    }

    /**
     * Test the property 'includeFutureInventory'
     */
    @Test
    public void includeFutureInventoryTest() {
        // TODO: test includeFutureInventory
    }

    /**
     * Test the property 'includeNegativeFutureInventory'
     */
    @Test
    public void includeNegativeFutureInventoryTest() {
        // TODO: test includeNegativeFutureInventory
    }

    /**
     * Test the property 'deliveryDateBefore'
     */
    @Test
    public void deliveryDateBeforeTest() {
        // TODO: test deliveryDateBefore
    }

    /**
     * Test the property 'deliveryDateAfter'
     */
    @Test
    public void deliveryDateAfterTest() {
        // TODO: test deliveryDateAfter
    }

    /**
     * Test the property 'sortByEnum'
     */
    @Test
    public void sortByEnumTest() {
        // TODO: test sortByEnum
    }

    /**
     * Test the property 'sortDescending'
     */
    @Test
    public void sortDescendingTest() {
        // TODO: test sortDescending
    }

    /**
     * Test the property 'forceDefaultsForUnspecifiedTagCategories'
     */
    @Test
    public void forceDefaultsForUnspecifiedTagCategoriesTest() {
        // TODO: test forceDefaultsForUnspecifiedTagCategories
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'locationCode'
     */
    @Test
    public void locationCodeTest() {
        // TODO: test locationCode
    }

    /**
     * Test the property 'userID'
     */
    @Test
    public void userIDTest() {
        // TODO: test userID
    }

    /**
     * Test the property 'pageSize'
     */
    @Test
    public void pageSizeTest() {
        // TODO: test pageSize
    }

    /**
     * Test the property 'pageNum'
     */
    @Test
    public void pageNumTest() {
        // TODO: test pageNum
    }

    /**
     * Test the property 'sortBy'
     */
    @Test
    public void sortByTest() {
        // TODO: test sortBy
    }

}
