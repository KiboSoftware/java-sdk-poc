/*
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.inventory.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.inventory.models.AdjustFutureDate404Response;
import com.kibocommerce.sdk.inventory.models.AdjustRequest;
import com.kibocommerce.sdk.inventory.models.DeleteFutureItemRequest;
import com.kibocommerce.sdk.inventory.models.DeleteFutureItemResponse;
import com.kibocommerce.sdk.inventory.models.DeleteItemRequest;
import com.kibocommerce.sdk.inventory.models.DeleteItemResponse;
import com.kibocommerce.sdk.inventory.models.DeleteItemsRequest;
import com.kibocommerce.sdk.inventory.models.JobIDResponse;
import com.kibocommerce.sdk.inventory.models.JobQueueResponse;
import com.kibocommerce.sdk.inventory.models.RefreshRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ModifyInventoryApi
 */
@Disabled
public class ModifyInventoryApiTest {

    private final ModifyInventoryApi api = new ModifyInventoryApi();

    /**
     * Adjust
     *
     * Adjust Inventory
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adjustTest() throws ApiException {
        Integer xVolTenant = null;
        AdjustRequest adjustRequest = null;
        JobIDResponse response = api.adjust(xVolTenant, adjustRequest);
        // TODO: test validations
    }

    /**
     * Delete
     *
     * Delete Inventory
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        Integer xVolTenant = null;
        DeleteItemRequest deleteItemRequest = null;
        Integer xVolSite = null;
        DeleteItemResponse response = api.delete(xVolTenant, deleteItemRequest, xVolSite);
        // TODO: test validations
    }

    /**
     * Delete-future-inventory
     *
     * Delete Future Inventory
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFutureInventoryTest() throws ApiException {
        Integer xVolTenant = null;
        DeleteFutureItemRequest deleteFutureItemRequest = null;
        Integer xVolSite = null;
        DeleteFutureItemResponse response = api.deleteFutureInventory(xVolTenant, deleteFutureItemRequest, xVolSite);
        // TODO: test validations
    }

    /**
     * Delete-items
     *
     * Delete Multiple Inventory
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteItemsTest() throws ApiException {
        Integer xVolTenant = null;
        DeleteItemsRequest deleteItemsRequest = null;
        Integer xVolSite = null;
        DeleteItemResponse response = api.deleteItems(xVolTenant, deleteItemsRequest, xVolSite);
        // TODO: test validations
    }

    /**
     * Redistribute Inventory Across Tags
     *
     * Create jobs to redistribute inventory across tags for the given tenant
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void redistributeInventoryAcrossTagsTest() throws ApiException {
        Integer xVolTenant = null;
        List<JobQueueResponse> response = api.redistributeInventoryAcrossTags(xVolTenant);
        // TODO: test validations
    }

    /**
     * Refresh
     *
     * Refresh Inventory
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void refreshTest() throws ApiException {
        Integer xVolTenant = null;
        RefreshRequest refreshRequest = null;
        JobIDResponse response = api.refresh(xVolTenant, refreshRequest);
        // TODO: test validations
    }

}
