/*
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.inventory.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.inventory.models.CreateExportSettingsFTPRequest;
import com.kibocommerce.sdk.inventory.models.CreateExportSettingsRequest;
import com.kibocommerce.sdk.inventory.models.CreateExportSettingsS3Request;
import com.kibocommerce.sdk.inventory.models.DeletedCountResponse;
import com.kibocommerce.sdk.inventory.models.ExportInventoryRequest;
import com.kibocommerce.sdk.inventory.models.ExportInventoryResponse;
import com.kibocommerce.sdk.inventory.models.ExportSettingsResponse;
import com.kibocommerce.sdk.inventory.models.GetExportSettingsResponse;
import com.kibocommerce.sdk.inventory.models.UpdateExportSettingsFTPRequest;
import com.kibocommerce.sdk.inventory.models.UpdateExportSettingsFTPResponse;
import com.kibocommerce.sdk.inventory.models.UpdateExportSettingsRequest;
import com.kibocommerce.sdk.inventory.models.UpdateExportSettingsResponse;
import com.kibocommerce.sdk.inventory.models.UpdateExportSettingsS3Request;
import com.kibocommerce.sdk.inventory.models.UpdateExportSettingsS3Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExportInventoryApi
 */
@Disabled
public class ExportInventoryApiTest {

    private final ExportInventoryApi api = new ExportInventoryApi();

    /**
     * Create Export Settings
     *
     * Create an Export Settings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createExportSettingsTest() throws ApiException {
        Integer xVolTenant = null;
        CreateExportSettingsRequest createExportSettingsRequest = null;
        ExportSettingsResponse response = api.createExportSettings(xVolTenant, createExportSettingsRequest);
        // TODO: test validations
    }

    /**
     * Create Export Settings FTP
     *
     * Create an Export Settings FTP
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createExportSettingsFTPTest() throws ApiException {
        Integer xVolTenant = null;
        CreateExportSettingsFTPRequest createExportSettingsFTPRequest = null;
        ExportSettingsResponse response = api.createExportSettingsFTP(xVolTenant, createExportSettingsFTPRequest);
        // TODO: test validations
    }

    /**
     * Create Export Settings S3
     *
     * Create an Export Settings S3
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createExportSettingsS3Test() throws ApiException {
        Integer xVolTenant = null;
        CreateExportSettingsS3Request createExportSettingsS3Request = null;
        ExportSettingsResponse response = api.createExportSettingsS3(xVolTenant, createExportSettingsS3Request);
        // TODO: test validations
    }

    /**
     * Delete Export Settings
     *
     * Deletes an Export Settings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteExportSettingsTest() throws ApiException {
        Integer xVolTenant = null;
        String exportSettingsName = null;
        DeletedCountResponse response = api.deleteExportSettings(xVolTenant, exportSettingsName);
        // TODO: test validations
    }

    /**
     * Delete Export Settings FTP
     *
     * Deletes an Export Settings FTP. Not specifying exportSettingsFTPID deletes ALL ftp settings for the specified export settings.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteExportSettingsFTPTest() throws ApiException {
        Integer xVolTenant = null;
        String exportSettingsName = null;
        String exportSettingsFTPName = null;
        DeletedCountResponse response = api.deleteExportSettingsFTP(xVolTenant, exportSettingsName, exportSettingsFTPName);
        // TODO: test validations
    }

    /**
     * Delete Export Settings S3
     *
     * Deletes an Export Settings S3. Not specifying exportSettingsS3ID deletes ALL s3 settings for the specified export settings.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteExportSettingsS3Test() throws ApiException {
        Integer xVolTenant = null;
        String exportSettingsName = null;
        String exportSettingsS3Name = null;
        DeletedCountResponse response = api.deleteExportSettingsS3(xVolTenant, exportSettingsName, exportSettingsS3Name);
        // TODO: test validations
    }

    /**
     * Get Export Settings
     *
     * Get an export settings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExportSettingsTest() throws ApiException {
        Integer xVolTenant = null;
        String exportSettingsName = null;
        List<GetExportSettingsResponse> response = api.getExportSettings(xVolTenant, exportSettingsName);
        // TODO: test validations
    }

    /**
     * Run Export
     *
     * Run Export Settings Job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void runExportTest() throws ApiException {
        Integer xVolTenant = null;
        ExportInventoryRequest exportInventoryRequest = null;
        ExportInventoryResponse response = api.runExport(xVolTenant, exportInventoryRequest);
        // TODO: test validations
    }

    /**
     * Update Export Settings
     *
     * Update an Export Settings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExportSettingsTest() throws ApiException {
        Integer xVolTenant = null;
        UpdateExportSettingsRequest updateExportSettingsRequest = null;
        UpdateExportSettingsResponse response = api.updateExportSettings(xVolTenant, updateExportSettingsRequest);
        // TODO: test validations
    }

    /**
     * Update Export Settings FTP
     *
     * Update an Export Settings FTP
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExportSettingsFTPTest() throws ApiException {
        Integer xVolTenant = null;
        UpdateExportSettingsFTPRequest updateExportSettingsFTPRequest = null;
        UpdateExportSettingsFTPResponse response = api.updateExportSettingsFTP(xVolTenant, updateExportSettingsFTPRequest);
        // TODO: test validations
    }

    /**
     * Update Export Settings S3
     *
     * Update an Export Settings S3
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExportSettingsS3Test() throws ApiException {
        Integer xVolTenant = null;
        UpdateExportSettingsS3Request updateExportSettingsS3Request = null;
        UpdateExportSettingsS3Response response = api.updateExportSettingsS3(xVolTenant, updateExportSettingsS3Request);
        // TODO: test validations
    }

}
