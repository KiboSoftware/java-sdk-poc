/*
 * Kibo SiteSettings Service
 * OpenAPI Spec for Kibo SiteSettings Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.settings.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.settings.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.settings.models.CacheSettings;
import com.kibocommerce.sdk.settings.models.CustomRouteSettings;
import com.kibocommerce.sdk.settings.models.EmailTransactionSettings;
import com.kibocommerce.sdk.settings.models.EmailTypeSetting;
import com.kibocommerce.sdk.settings.models.ReCaptchaSettings;
import com.kibocommerce.sdk.settings.models.SMSTransactionSettings;
import com.kibocommerce.sdk.settings.models.SMSTypeSetting;
import com.kibocommerce.sdk.settings.models.TaxableTerritory;
import com.kibocommerce.sdk.settings.models.ViewAuthorizations;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for GeneralSettings
 */
public class GeneralSettingsTest {
    private final GeneralSettings model = new GeneralSettings();

    /**
     * Model tests for GeneralSettings
     */
    @Test
    public void testGeneralSettings() {
        // TODO: test GeneralSettings
    }

    /**
     * Test the property 'isMozuWebSite'
     */
    @Test
    public void isMozuWebSiteTest() {
        // TODO: test isMozuWebSite
    }

    /**
     * Test the property 'websiteName'
     */
    @Test
    public void websiteNameTest() {
        // TODO: test websiteName
    }

    /**
     * Test the property 'customCdnHostName'
     */
    @Test
    public void customCdnHostNameTest() {
        // TODO: test customCdnHostName
    }

    /**
     * Test the property 'missingImageSubstitute'
     */
    @Test
    public void missingImageSubstituteTest() {
        // TODO: test missingImageSubstitute
    }

    /**
     * Test the property 'cacheSettings'
     */
    @Test
    public void cacheSettingsTest() {
        // TODO: test cacheSettings
    }

    /**
     * Test the property 'templateSiteId'
     */
    @Test
    public void templateSiteIdTest() {
        // TODO: test templateSiteId
    }

    /**
     * Test the property 'siteTimeZone'
     */
    @Test
    public void siteTimeZoneTest() {
        // TODO: test siteTimeZone
    }

    /**
     * Test the property 'siteTimeFormat'
     */
    @Test
    public void siteTimeFormatTest() {
        // TODO: test siteTimeFormat
    }

    /**
     * Test the property 'senderEmailAddress'
     */
    @Test
    public void senderEmailAddressTest() {
        // TODO: test senderEmailAddress
    }

    /**
     * Test the property 'senderEmailAlias'
     */
    @Test
    public void senderEmailAliasTest() {
        // TODO: test senderEmailAlias
    }

    /**
     * Test the property 'replyToEmailAddress'
     */
    @Test
    public void replyToEmailAddressTest() {
        // TODO: test replyToEmailAddress
    }

    /**
     * Test the property 'bccEmailAddress'
     */
    @Test
    public void bccEmailAddressTest() {
        // TODO: test bccEmailAddress
    }

    /**
     * Test the property 'favIconPath'
     */
    @Test
    public void favIconPathTest() {
        // TODO: test favIconPath
    }

    /**
     * Test the property 'favIconMobilePath'
     */
    @Test
    public void favIconMobilePathTest() {
        // TODO: test favIconMobilePath
    }

    /**
     * Test the property 'logoText'
     */
    @Test
    public void logoTextTest() {
        // TODO: test logoText
    }

    /**
     * Test the property 'logoPath'
     */
    @Test
    public void logoPathTest() {
        // TODO: test logoPath
    }

    /**
     * Test the property 'theme'
     */
    @Test
    public void themeTest() {
        // TODO: test theme
    }

    /**
     * Test the property 'mobileTheme'
     */
    @Test
    public void mobileThemeTest() {
        // TODO: test mobileTheme
    }

    /**
     * Test the property 'tabletTheme'
     */
    @Test
    public void tabletThemeTest() {
        // TODO: test tabletTheme
    }

    /**
     * Test the property 'googleAnalyticsCode'
     */
    @Test
    public void googleAnalyticsCodeTest() {
        // TODO: test googleAnalyticsCode
    }

    /**
     * Test the property 'isGoogleAnalyticsEnabled'
     */
    @Test
    public void isGoogleAnalyticsEnabledTest() {
        // TODO: test isGoogleAnalyticsEnabled
    }

    /**
     * Test the property 'isGoogleAnalyticsEcommerceEnabled'
     */
    @Test
    public void isGoogleAnalyticsEcommerceEnabledTest() {
        // TODO: test isGoogleAnalyticsEcommerceEnabled
    }

    /**
     * Test the property 'isWishlistCreationEnabled'
     */
    @Test
    public void isWishlistCreationEnabledTest() {
        // TODO: test isWishlistCreationEnabled
    }

    /**
     * Test the property 'isMultishipEnabled'
     */
    @Test
    public void isMultishipEnabledTest() {
        // TODO: test isMultishipEnabled
    }

    /**
     * Test the property 'isAddressValidationEnabled'
     */
    @Test
    public void isAddressValidationEnabledTest() {
        // TODO: test isAddressValidationEnabled
    }

    /**
     * Test the property 'allowInvalidAddresses'
     */
    @Test
    public void allowInvalidAddressesTest() {
        // TODO: test allowInvalidAddresses
    }

    /**
     * Test the property 'taxableTerritories'
     */
    @Test
    public void taxableTerritoriesTest() {
        // TODO: test taxableTerritories
    }

    /**
     * Test the property 'supressedEmailTransactions'
     */
    @Test
    public void supressedEmailTransactionsTest() {
        // TODO: test supressedEmailTransactions
    }

    /**
     * Test the property 'emailTransactionsOnlyOnRequest'
     */
    @Test
    public void emailTransactionsOnlyOnRequestTest() {
        // TODO: test emailTransactionsOnlyOnRequest
    }

    /**
     * Test the property 'auditInfo'
     */
    @Test
    public void auditInfoTest() {
        // TODO: test auditInfo
    }

    /**
     * Test the property 'viewAuthorizations'
     */
    @Test
    public void viewAuthorizationsTest() {
        // TODO: test viewAuthorizations
    }

    /**
     * Test the property 'customRoutes'
     */
    @Test
    public void customRoutesTest() {
        // TODO: test customRoutes
    }

    /**
     * Test the property 'emailTypes'
     */
    @Test
    public void emailTypesTest() {
        // TODO: test emailTypes
    }

    /**
     * Test the property 'supressedSmsTransactions'
     */
    @Test
    public void supressedSmsTransactionsTest() {
        // TODO: test supressedSmsTransactions
    }

    /**
     * Test the property 'smsTypes'
     */
    @Test
    public void smsTypesTest() {
        // TODO: test smsTypes
    }

    /**
     * Test the property 'reCaptchaSettings'
     */
    @Test
    public void reCaptchaSettingsTest() {
        // TODO: test reCaptchaSettings
    }

}
