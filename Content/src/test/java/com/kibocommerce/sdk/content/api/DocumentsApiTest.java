/*
 * Kibo Content Service
 * OpenAPI Spec for Kibo Content Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.content.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.content.models.ContentHttpRequestMessage;
import com.kibocommerce.sdk.content.models.Document;
import com.kibocommerce.sdk.content.models.DocumentCollection;
import com.kibocommerce.sdk.content.models.DocumentCopyRequest;
import com.kibocommerce.sdk.content.models.DocumentCopyResponse;
import com.kibocommerce.sdk.content.models.DocumentMoveSummary;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DocumentsApi
 */
@Disabled
public class DocumentsApiTest {

    private final DocumentsApi api = new DocumentsApi();

    /**
     * Copy Document
     *
     * Copy Document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void copyDocumentsTest() throws ApiException {
        String documentListName = null;
        DocumentCopyRequest documentCopyRequest = null;
        DocumentCopyResponse response = api.copyDocuments(documentListName, documentCopyRequest);
        // TODO: test validations
    }

    /**
     * Create Document
     *
     * Create Document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDocumentTest() throws ApiException {
        String documentListName = null;
        Document document = null;
        Document response = api.createDocument(documentListName, document);
        // TODO: test validations
    }

    /**
     * Delete Document
     *
     * Delete Document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteByPathTest() throws ApiException {
        String documentListName = null;
        String path = null;
        api.deleteByPath(documentListName, path);
        // TODO: test validations
    }

    /**
     * Delete Document
     *
     * Delete Document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDocumentTest() throws ApiException {
        String documentListName = null;
        String documentId = null;
        api.deleteDocument(documentListName, documentId);
        // TODO: test validations
    }

    /**
     * Delete Document Content
     *
     * Delete Document Content
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDocumentContentTest() throws ApiException {
        String documentListName = null;
        String documentId = null;
        api.deleteDocumentContent(documentListName, documentId);
        // TODO: test validations
    }

    /**
     * Delete Document Content by Path
     *
     * Delete Document Content by Path
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTreeDocumentContentTest() throws ApiException {
        String documentListName = null;
        String documentName = null;
        ContentHttpRequestMessage contentHttpRequestMessage = null;
        api.deleteTreeDocumentContent(documentListName, documentName, contentHttpRequestMessage);
        // TODO: test validations
    }

    /**
     * Get Document
     *
     * Get Document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentTest() throws ApiException {
        String documentListName = null;
        String documentId = null;
        Boolean includeInactive = null;
        Document response = api.getDocument(documentListName, documentId, includeInactive);
        // TODO: test validations
    }

    /**
     * Get Document Content
     *
     * Get Document Content
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentContentTest() throws ApiException {
        String documentListName = null;
        String documentId = null;
        api.getDocumentContent(documentListName, documentId);
        // TODO: test validations
    }

    /**
     * Get Document Content Headers
     *
     * Get Document Content Headers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentContentHeadTest() throws ApiException {
        String documentListName = null;
        String documentId = null;
        String includeInactive = null;
        api.getDocumentContentHead(documentListName, documentId, includeInactive);
        // TODO: test validations
    }

    /**
     * Get Documents
     *
     * Get Documents
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentsTest() throws ApiException {
        String documentListName = null;
        String filter = null;
        String sortBy = null;
        Integer pageSize = null;
        Integer startIndex = null;
        Boolean includeInactive = null;
        String path = null;
        Boolean includeSubPaths = null;
        String queryScope = null;
        DocumentCollection response = api.getDocuments(documentListName, filter, sortBy, pageSize, startIndex, includeInactive, path, includeSubPaths, queryScope);
        // TODO: test validations
    }

    /**
     * Get Document by Path
     *
     * Retrieves a specific Document within the specified ContentCollection using the specified document name, unique within a specific folder with the specified documentId, version, and status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTreeDocumentTest() throws ApiException {
        String documentListName = null;
        String documentName = null;
        Boolean includeInactive = null;
        Document response = api.getTreeDocument(documentListName, documentName, includeInactive);
        // TODO: test validations
    }

    /**
     * Get Document Content by Path
     *
     * Returns transformations on a document. For example, resizing an image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTreeDocumentContentTest() throws ApiException {
        String documentListName = null;
        String documentName = null;
        api.getTreeDocumentContent(documentListName, documentName);
        // TODO: test validations
    }

    /**
     * Get Document Content Headers by Path
     *
     * Get Document Content Headers by Path
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTreeDocumentContentHeadTest() throws ApiException {
        String documentListName = null;
        String documentName = null;
        api.getTreeDocumentContentHead(documentListName, documentName);
        // TODO: test validations
    }

    /**
     * Move Document
     *
     * Move Document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void moveByPathTest() throws ApiException {
        String documentListName = null;
        String sourcePath = null;
        String destPath = null;
        Boolean renameDuplicates = null;
        Boolean previewMode = null;
        DocumentMoveSummary response = api.moveByPath(documentListName, sourcePath, destPath, renameDuplicates, previewMode);
        // TODO: test validations
    }

    /**
     * Patch Document
     *
     * Patch Document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchDocumentTest() throws ApiException {
        String documentListName = null;
        String documentId = null;
        Document document = null;
        Document response = api.patchDocument(documentListName, documentId, document);
        // TODO: test validations
    }

    /**
     * Get Resized Image
     *
     * Returns transformations on a document. For example, resizing an image.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformDocumentContentTest() throws ApiException {
        String documentListName = null;
        String documentId = null;
        Integer width = null;
        Integer height = null;
        Integer max = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        String crop = null;
        Integer quality = null;
        api.transformDocumentContent(documentListName, documentId, width, height, max, maxWidth, maxHeight, crop, quality);
        // TODO: test validations
    }

    /**
     * Get Resized Image by Path
     *
     * Returns transformations on a document. For example, resizing an image. By Path
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformTreeDocumentContentTest() throws ApiException {
        String documentListName = null;
        String documentName = null;
        Integer width = null;
        Integer height = null;
        Integer max = null;
        Integer maxWidth = null;
        Integer maxHeight = null;
        String crop = null;
        Integer quality = null;
        api.transformTreeDocumentContent(documentListName, documentName, width, height, max, maxWidth, maxHeight, crop, quality);
        // TODO: test validations
    }

    /**
     * Update Document
     *
     * Update Document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDocumentTest() throws ApiException {
        String documentListName = null;
        String documentId = null;
        Document document = null;
        Document response = api.updateDocument(documentListName, documentId, document);
        // TODO: test validations
    }

    /**
     * Update Document Content
     *
     * Update Document Content
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDocumentContentTest() throws ApiException {
        String documentListName = null;
        String documentId = null;
        ContentHttpRequestMessage contentHttpRequestMessage = null;
        api.updateDocumentContent(documentListName, documentId, contentHttpRequestMessage);
        // TODO: test validations
    }

    /**
     * Update Document Content by Path
     *
     * Update Document Content by Path
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTreeDocumentContentTest() throws ApiException {
        String documentListName = null;
        String documentName = null;
        ContentHttpRequestMessage contentHttpRequestMessage = null;
        api.updateTreeDocumentContent(documentListName, documentName, contentHttpRequestMessage);
        // TODO: test validations
    }

}
