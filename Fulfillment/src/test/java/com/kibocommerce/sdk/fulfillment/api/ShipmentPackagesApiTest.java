/*
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.fulfillment.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.fulfillment.models.EntityModelOfShipment;
import com.kibocommerce.sdk.fulfillment.models.FulfillmentPackage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ShipmentPackagesApi
 */
@Disabled
public class ShipmentPackagesApiTest {

    private final ShipmentPackagesApi api = new ShipmentPackagesApi();

    /**
     * Delete Shipment Package
     *
     * Delete Shipment Package
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteShipmentPackageUsingDELETETest() throws ApiException {
        Integer shipmentNumber = null;
        String packageId = null;
        String ifMatch = null;
        api.deleteShipmentPackageUsingDELETE(shipmentNumber, packageId, ifMatch);
        // TODO: test validations
    }

    /**
     * Delete Shipment Packages
     *
     * Delete Shipment Packages
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteShipmentPackagesUsingDELETETest() throws ApiException {
        Integer shipmentNumber = null;
        String ifMatch = null;
        EntityModelOfShipment response = api.deleteShipmentPackagesUsingDELETE(shipmentNumber, ifMatch);
        // TODO: test validations
    }

    /**
     * Create Shipment Package
     *
     * Create Shipment Package
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void newPackageUsingPOSTTest() throws ApiException {
        Integer shipmentNumber = null;
        String ifMatch = null;
        FulfillmentPackage fulfillmentPackage = null;
        EntityModelOfShipment response = api.newPackageUsingPOST(shipmentNumber, ifMatch, fulfillmentPackage);
        // TODO: test validations
    }

    /**
     * Bulk Create Shipment Packages
     *
     * Bulk Create Shipment Packages
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void newPackagesUsingPOSTTest() throws ApiException {
        Integer shipmentNumber = null;
        String ifMatch = null;
        List<FulfillmentPackage> fulfillmentPackage = null;
        EntityModelOfShipment response = api.newPackagesUsingPOST(shipmentNumber, ifMatch, fulfillmentPackage);
        // TODO: test validations
    }

    /**
     * Update Shipment Package
     *
     * Update Shipment Package
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePackageUsingPUTTest() throws ApiException {
        Integer shipmentNumber = null;
        String packageId = null;
        String ifMatch = null;
        FulfillmentPackage fulfillmentPackage = null;
        EntityModelOfShipment response = api.updatePackageUsingPUT(shipmentNumber, packageId, ifMatch, fulfillmentPackage);
        // TODO: test validations
    }

}
