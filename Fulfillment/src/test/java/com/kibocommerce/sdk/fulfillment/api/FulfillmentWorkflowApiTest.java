/*
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.fulfillment.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.fulfillment.models.EntityModelOfWorkflowProcess;
import com.kibocommerce.sdk.fulfillment.models.PagedModelOfEntityModelOfWorkflowProcess;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FulfillmentWorkflowApi
 */
@Disabled
public class FulfillmentWorkflowApiTest {

    private final FulfillmentWorkflowApi api = new FulfillmentWorkflowApi();

    /**
     * Get Definition Image
     *
     * Get Definition Image
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDefinitionImageUsingGETTest() throws ApiException {
        String containerIdOrAlias = null;
        String processId = null;
        String response = api.getDefinitionImageUsingGET(containerIdOrAlias, processId);
        // TODO: test validations
    }

    /**
     * Get Workflow Process by Shipment Type and Location Code
     *
     * Get Workflow Process by Shipment Type and Location Code
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkflowProcessByShipmentTypeLocationCodeUsingGETTest() throws ApiException {
        String shipmentType = null;
        String locationCode = null;
        EntityModelOfWorkflowProcess response = api.getWorkflowProcessByShipmentTypeLocationCodeUsingGET(shipmentType, locationCode);
        // TODO: test validations
    }

    /**
     * Get Workflow Process by Shipment Type and Location Group Code
     *
     * Get Workflow Process by Shipment Type and Location Group Code
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkflowProcessByShipmentTypeLocationGroupCodeUsingGETTest() throws ApiException {
        String shipmentType = null;
        String locationGroupCode = null;
        EntityModelOfWorkflowProcess response = api.getWorkflowProcessByShipmentTypeLocationGroupCodeUsingGET(shipmentType, locationGroupCode);
        // TODO: test validations
    }

    /**
     * Get Workflow Process by Shipment Type
     *
     * Get Workflow Process by Shipment Type
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkflowProcessByShipmentTypeUsingGETTest() throws ApiException {
        String shipmentType = null;
        EntityModelOfWorkflowProcess response = api.getWorkflowProcessByShipmentTypeUsingGET(shipmentType);
        // TODO: test validations
    }

    /**
     * Get Workflow Process
     *
     * Get Workflow Process
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkflowProcessUsingGETTest() throws ApiException {
        String containerIdOrAlias = null;
        String processId = null;
        EntityModelOfWorkflowProcess response = api.getWorkflowProcessUsingGET(containerIdOrAlias, processId);
        // TODO: test validations
    }

    /**
     * Get Workflow Processes
     *
     * Get Workflow Processes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkflowProcessesUsingGETTest() throws ApiException {
        Integer page = null;
        Integer pageSize = null;
        String sort = null;
        PagedModelOfEntityModelOfWorkflowProcess response = api.getWorkflowProcessesUsingGET(page, pageSize, sort);
        // TODO: test validations
    }

}
