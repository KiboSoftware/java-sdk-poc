/*
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.fulfillment.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.fulfillment.models.ClosePickWave;
import com.kibocommerce.sdk.fulfillment.models.CollectionModelOfPickWave;
import com.kibocommerce.sdk.fulfillment.models.CollectionModelOfShipment;
import com.kibocommerce.sdk.fulfillment.models.CreatePickWave;
import com.kibocommerce.sdk.fulfillment.models.EntityModelOfPickWave;
import com.kibocommerce.sdk.fulfillment.models.EntityModelOfPickWaveDetail;
import com.kibocommerce.sdk.fulfillment.models.EntityModelOfstring;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PickWaveApi
 */
@Disabled
public class PickWaveApiTest {

    private final PickWaveApi api = new PickWaveApi();

    /**
     * Close Pick Wave
     *
     * Close Pick Wave
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void closePickWaveUsingPUTTest() throws ApiException {
        Integer pickWaveNumber = null;
        ClosePickWave closePickWave = null;
        EntityModelOfPickWave response = api.closePickWaveUsingPUT(pickWaveNumber, closePickWave);
        // TODO: test validations
    }

    /**
     * Create Pick Wave
     *
     * Create Pick Wave
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPickWaveUsingPOSTTest() throws ApiException {
        CreatePickWave createPickWave = null;
        EntityModelOfPickWave response = api.createPickWaveUsingPOST(createPickWave);
        // TODO: test validations
    }

    /**
     * Get Open Pick Waves
     *
     * Get Open Pick Waves
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOpenPickWavesUsingGETTest() throws ApiException {
        String fulfillmentLocationCode = null;
        String shipmentType = null;
        String userId = null;
        String userDisplayName = null;
        CollectionModelOfPickWave response = api.getOpenPickWavesUsingGET(fulfillmentLocationCode, shipmentType, userId, userDisplayName);
        // TODO: test validations
    }

    /**
     * Get Pick Wave Details
     *
     * Get Pick Wave Details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPickWaveDetailsUsingGETTest() throws ApiException {
        Integer pickWaveNumber = null;
        String sortContentsByLocator = null;
        EntityModelOfPickWaveDetail response = api.getPickWaveDetailsUsingGET(pickWaveNumber, sortContentsByLocator);
        // TODO: test validations
    }

    /**
     * Get Pick Wave
     *
     * Get Pick Wave
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPickWaveUsingGETTest() throws ApiException {
        Integer pickWaveNumber = null;
        String sortContents = null;
        EntityModelOfPickWave response = api.getPickWaveUsingGET(pickWaveNumber, sortContents);
        // TODO: test validations
    }

    /**
     * Get Shipments in Pick Wave
     *
     * Get Shipments in Pick Wave
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getShipmentsInPickWaveUsingGETTest() throws ApiException {
        Integer pickWaveNumber = null;
        CollectionModelOfShipment response = api.getShipmentsInPickWaveUsingGET(pickWaveNumber);
        // TODO: test validations
    }

    /**
     * Render Pick Wave Order Sheets
     *
     * Render pick wave order pick sheets in HTML format for printing
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void renderOrderPickSheetsUsingGETTest() throws ApiException {
        Integer pickWaveNumber = null;
        EntityModelOfstring response = api.renderOrderPickSheetsUsingGET(pickWaveNumber);
        // TODO: test validations
    }

    /**
     * Render Pick Wave
     *
     * Render pick wave in HTML format for printing
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void renderPickWaveUsingGETTest() throws ApiException {
        Integer pickWaveNumber = null;
        Boolean printPickWave = null;
        Boolean printPackingLists = null;
        Boolean printSingleOrderSheets = null;
        EntityModelOfstring response = api.renderPickWaveUsingGET(pickWaveNumber, printPickWave, printPackingLists, printSingleOrderSheets);
        // TODO: test validations
    }

}
