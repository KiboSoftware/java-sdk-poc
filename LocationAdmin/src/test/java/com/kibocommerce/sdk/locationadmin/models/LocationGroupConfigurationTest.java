/*
 * Kibo Location Admin Service
 * OpenAPI Spec for Kibo Location Admin Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.locationadmin.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.locationadmin.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.locationadmin.models.BoxType;
import com.kibocommerce.sdk.locationadmin.models.BpmConfiguration;
import com.kibocommerce.sdk.locationadmin.models.LocationAttribute;
import com.kibocommerce.sdk.locationadmin.models.LocationCarrier;
import com.kibocommerce.sdk.locationadmin.models.PackageSettings;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for LocationGroupConfiguration
 */
public class LocationGroupConfigurationTest {
    private final LocationGroupConfiguration model = new LocationGroupConfiguration();

    /**
     * Model tests for LocationGroupConfiguration
     */
    @Test
    public void testLocationGroupConfiguration() {
        // TODO: test LocationGroupConfiguration
    }

    /**
     * Test the property 'tenantId'
     */
    @Test
    public void tenantIdTest() {
        // TODO: test tenantId
    }

    /**
     * Test the property 'siteId'
     */
    @Test
    public void siteIdTest() {
        // TODO: test siteId
    }

    /**
     * Test the property 'locationGroupId'
     */
    @Test
    public void locationGroupIdTest() {
        // TODO: test locationGroupId
    }

    /**
     * Test the property 'locationGroupCode'
     */
    @Test
    public void locationGroupCodeTest() {
        // TODO: test locationGroupCode
    }

    /**
     * Test the property 'customerFailedToPickupAfterAction'
     */
    @Test
    public void customerFailedToPickupAfterActionTest() {
        // TODO: test customerFailedToPickupAfterAction
    }

    /**
     * Test the property 'customerFailedToPickupDeadline'
     */
    @Test
    public void customerFailedToPickupDeadlineTest() {
        // TODO: test customerFailedToPickupDeadline
    }

    /**
     * Test the property 'sendCustomerPickupReminder'
     */
    @Test
    public void sendCustomerPickupReminderTest() {
        // TODO: test sendCustomerPickupReminder
    }

    /**
     * Test the property 'enableForSTH'
     */
    @Test
    public void enableForSTHTest() {
        // TODO: test enableForSTH
    }

    /**
     * Test the property 'enableForISPU'
     */
    @Test
    public void enableForISPUTest() {
        // TODO: test enableForISPU
    }

    /**
     * Test the property 'enableAdvancedOptionForPickWaveCreation'
     */
    @Test
    public void enableAdvancedOptionForPickWaveCreationTest() {
        // TODO: test enableAdvancedOptionForPickWaveCreation
    }

    /**
     * Test the property 'maximumNumberOfOrdersInPickWave'
     */
    @Test
    public void maximumNumberOfOrdersInPickWaveTest() {
        // TODO: test maximumNumberOfOrdersInPickWave
    }

    /**
     * Test the property 'defaultNumberOfOrdersInPickWave'
     */
    @Test
    public void defaultNumberOfOrdersInPickWaveTest() {
        // TODO: test defaultNumberOfOrdersInPickWave
    }

    /**
     * Test the property 'pickWavePrintFormat'
     */
    @Test
    public void pickWavePrintFormatTest() {
        // TODO: test pickWavePrintFormat
    }

    /**
     * Test the property 'closePickWavePermissions'
     */
    @Test
    public void closePickWavePermissionsTest() {
        // TODO: test closePickWavePermissions
    }

    /**
     * Test the property 'wmsEnabled'
     */
    @Test
    public void wmsEnabledTest() {
        // TODO: test wmsEnabled
    }

    /**
     * Test the property 'enableScanningOfUpcForShipToHome'
     */
    @Test
    public void enableScanningOfUpcForShipToHomeTest() {
        // TODO: test enableScanningOfUpcForShipToHome
    }

    /**
     * Test the property 'allowReturns'
     */
    @Test
    public void allowReturnsTest() {
        // TODO: test allowReturns
    }

    /**
     * Test the property 'returnRefundReduction'
     */
    @Test
    public void returnRefundReductionTest() {
        // TODO: test returnRefundReduction
    }

    /**
     * Test the property 'defaultReturnRefundReductionAmount'
     */
    @Test
    public void defaultReturnRefundReductionAmountTest() {
        // TODO: test defaultReturnRefundReductionAmount
    }

    /**
     * Test the property 'maximumReturnRefundReductionAmount'
     */
    @Test
    public void maximumReturnRefundReductionAmountTest() {
        // TODO: test maximumReturnRefundReductionAmount
    }

    /**
     * Test the property 'defaultCarrier'
     */
    @Test
    public void defaultCarrierTest() {
        // TODO: test defaultCarrier
    }

    /**
     * Test the property 'carriers'
     */
    @Test
    public void carriersTest() {
        // TODO: test carriers
    }

    /**
     * Test the property 'printReturnLabel'
     */
    @Test
    public void printReturnLabelTest() {
        // TODO: test printReturnLabel
    }

    /**
     * Test the property 'defaultPrinterType'
     */
    @Test
    public void defaultPrinterTypeTest() {
        // TODO: test defaultPrinterType
    }

    /**
     * Test the property 'boxTypes'
     */
    @Test
    public void boxTypesTest() {
        // TODO: test boxTypes
    }

    /**
     * Test the property 'attributes'
     */
    @Test
    public void attributesTest() {
        // TODO: test attributes
    }

    /**
     * Test the property 'bpmConfigurations'
     */
    @Test
    public void bpmConfigurationsTest() {
        // TODO: test bpmConfigurations
    }

    /**
     * Test the property 'auditInfo'
     */
    @Test
    public void auditInfoTest() {
        // TODO: test auditInfo
    }

    /**
     * Test the property 'autoPackingListPopup'
     */
    @Test
    public void autoPackingListPopupTest() {
        // TODO: test autoPackingListPopup
    }

    /**
     * Test the property 'blockPartialStock'
     */
    @Test
    public void blockPartialStockTest() {
        // TODO: test blockPartialStock
    }

    /**
     * Test the property 'defaultMaxNumberOfShipmentsInPickWave'
     */
    @Test
    public void defaultMaxNumberOfShipmentsInPickWaveTest() {
        // TODO: test defaultMaxNumberOfShipmentsInPickWave
    }

    /**
     * Test the property 'displayProductImagesInPickWaveDetails'
     */
    @Test
    public void displayProductImagesInPickWaveDetailsTest() {
        // TODO: test displayProductImagesInPickWaveDetails
    }

    /**
     * Test the property 'enablePnpForSTH'
     */
    @Test
    public void enablePnpForSTHTest() {
        // TODO: test enablePnpForSTH
    }

    /**
     * Test the property 'enablePnpForBOPIS'
     */
    @Test
    public void enablePnpForBOPISTest() {
        // TODO: test enablePnpForBOPIS
    }

    /**
     * Test the property 'blockPartialCancel'
     */
    @Test
    public void blockPartialCancelTest() {
        // TODO: test blockPartialCancel
    }

    /**
     * Test the property 'packageSettings'
     */
    @Test
    public void packageSettingsTest() {
        // TODO: test packageSettings
    }

    /**
     * Test the property 'maxNumberOfPackingSlipsByGroup'
     */
    @Test
    public void maxNumberOfPackingSlipsByGroupTest() {
        // TODO: test maxNumberOfPackingSlipsByGroup
    }

}
