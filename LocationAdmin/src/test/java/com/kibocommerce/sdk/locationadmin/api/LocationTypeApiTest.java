/*
 * Kibo Location Admin Service
 * OpenAPI Spec for Kibo Location Admin Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.locationadmin.api;

import com.kibocommerce.sdk.common.ApiException;
import com.kibocommerce.sdk.locationadmin.models.LocationType;
import com.kibocommerce.sdk.locationadmin.models.LocationTypeCollection;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocationTypeApi
 */
@Disabled
public class LocationTypeApiTest {

    private final LocationTypeApi api = new LocationTypeApi();

    /**
     * Add Location Type Async
     *
     * Create a LocationType.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addLocationTypeAsyncTest() throws ApiException {
        LocationType locationType = null;
        LocationType response = api.addLocationTypeAsync(locationType);
        // TODO: test validations
    }

    /**
     * Delete Location Type
     *
     * Delete Location Type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteLocationTypeTest() throws ApiException {
        String locationTypeCode = null;
        api.deleteLocationType(locationTypeCode);
        // TODO: test validations
    }

    /**
     * Get Location Type
     *
     * Get a LocationType.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLocationTypeTest() throws ApiException {
        String locationTypeCode = null;
        LocationType response = api.getLocationType(locationTypeCode);
        // TODO: test validations
    }

    /**
     * Get Location Types
     *
     * Get a collection of LocationTypes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLocationTypesTest() throws ApiException {
        List<LocationType> response = api.getLocationTypes();
        // TODO: test validations
    }

    /**
     * Get Location Types  &lt;param name&#x3D;\&quot;pageSize\&quot;&gt;&lt;/param&gt;&lt;param name&#x3D;\&quot;sortBy\&quot;&gt;&lt;/param&gt;
     *
     * Get a collection of LocationTypes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLocationTypesWithPaginationTest() throws ApiException {
        Integer startIndex = null;
        Integer pageSize = null;
        LocationTypeCollection response = api.getLocationTypesWithPagination(startIndex, pageSize);
        // TODO: test validations
    }

    /**
     * Update Location Type
     *
     * Update a LocationType.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLocationTypeTest() throws ApiException {
        String locationTypeCode = null;
        LocationType locationType = null;
        LocationType response = api.updateLocationType(locationTypeCode, locationType);
        // TODO: test validations
    }

}
